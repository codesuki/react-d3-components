(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("React"), require("d3"), require("ReactDOM"));
	else if(typeof define === 'function' && define.amd)
		define(["React", "d3", "ReactDOM"], factory);
	else if(typeof exports === 'object')
		exports["ReactD3"] = factory(require("React"), require("d3"), require("ReactDOM"));
	else
		root["ReactD3"] = factory(root["React"], root["d3"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_15__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.d3 = exports.Brush = exports.AreaChart = exports.LineChart = exports.ScatterPlot = exports.PieChart = exports.Waveform = exports.BarChart = undefined;\n\nvar _BarChart = __webpack_require__(1);\n\nObject.defineProperty(exports, 'BarChart', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BarChart).default;\n  }\n});\n\nvar _Waveform = __webpack_require__(16);\n\nObject.defineProperty(exports, 'Waveform', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Waveform).default;\n  }\n});\n\nvar _PieChart = __webpack_require__(17);\n\nObject.defineProperty(exports, 'PieChart', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_PieChart).default;\n  }\n});\n\nvar _ScatterPlot = __webpack_require__(19);\n\nObject.defineProperty(exports, 'ScatterPlot', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ScatterPlot).default;\n  }\n});\n\nvar _LineChart = __webpack_require__(20);\n\nObject.defineProperty(exports, 'LineChart', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_LineChart).default;\n  }\n});\n\nvar _AreaChart = __webpack_require__(22);\n\nObject.defineProperty(exports, 'AreaChart', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AreaChart).default;\n  }\n});\n\nvar _Brush = __webpack_require__(23);\n\nObject.defineProperty(exports, 'Brush', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Brush).default;\n  }\n});\n\nvar _d2 = __webpack_require__(8);\n\nvar _d3 = _interopRequireDefault(_d2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.d3 = _d3.default;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.jsx\n// module id = 0\n// module chunks = 0\n//# sourceURL=webpack:///./src/index.jsx?");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = __webpack_require__(4);\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _Bar = __webpack_require__(5);\n\nvar _Bar2 = _interopRequireDefault(_Bar);\n\nvar _Tooltip = __webpack_require__(6);\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = __webpack_require__(10);\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _StackAccessorMixin = __webpack_require__(11);\n\nvar _StackAccessorMixin2 = _interopRequireDefault(_StackAccessorMixin);\n\nvar _StackDataMixin = __webpack_require__(12);\n\nvar _StackDataMixin2 = _interopRequireDefault(_StackDataMixin);\n\nvar _DefaultScalesMixin = __webpack_require__(13);\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func;\n\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        data: array.isRequired,\n        xScale: func.isRequired,\n        yScale: func.isRequired,\n        colorScale: func.isRequired,\n        values: func.isRequired,\n        label: func.isRequired,\n        x: func.isRequired,\n        y: func.isRequired,\n        y0: func.isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            data = _props.data,\n            xScale = _props.xScale,\n            yScale = _props.yScale,\n            colorScale = _props.colorScale,\n            values = _props.values,\n            label = _props.label,\n            x = _props.x,\n            y = _props.y,\n            y0 = _props.y0,\n            onMouseEnter = _props.onMouseEnter,\n            onMouseLeave = _props.onMouseLeave,\n            groupedBars = _props.groupedBars,\n            colorByLabel = _props.colorByLabel;\n\n\n        var bars = void 0;\n        if (groupedBars) {\n            bars = data.map(function (stack, serieIndex) {\n                return values(stack).map(function (e, index) {\n                    return _react2.default.createElement(_Bar2.default, {\n                        key: label(stack) + '.' + index,\n                        width: xScale.rangeBand() / data.length,\n                        height: yScale(yScale.domain()[0]) - yScale(y(e)),\n                        x: xScale(x(e)) + xScale.rangeBand() * serieIndex / data.length,\n                        y: yScale(y(e)),\n                        fill: colorScale(label(stack)),\n                        data: e,\n                        onMouseEnter: onMouseEnter,\n                        onMouseLeave: onMouseLeave\n                    });\n                });\n            });\n        } else {\n            bars = data.map(function (stack) {\n                return values(stack).map(function (e, index) {\n                    var color = colorByLabel ? colorScale(label(stack)) : colorScale(x(e));\n                    return _react2.default.createElement(_Bar2.default, {\n                        key: label(stack) + '.' + index,\n                        width: xScale.rangeBand(),\n                        height: yScale(yScale.domain()[0]) - yScale(y(e)),\n                        x: xScale(x(e)),\n                        y: yScale(y0(e) + y(e)),\n                        fill: color,\n                        data: e,\n                        onMouseEnter: onMouseEnter,\n                        onMouseLeave: onMouseLeave\n                    });\n                });\n            });\n        }\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            bars\n        );\n    }\n});\n\nvar BarChart = _react2.default.createClass({\n    displayName: 'BarChart',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _StackAccessorMixin2.default, _StackDataMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            colorByLabel: true\n        };\n    },\n    _tooltipHtml: function _tooltipHtml(d) {\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        var html = this.props.tooltipHtml(this.props.x(d), this.props.y0(d), this.props.y(d));\n\n        var midPoint = xScale.rangeBand() / 2;\n        var xPos = midPoint + xScale(this.props.x(d));\n\n        var topStack = this._data[this._data.length - 1].values;\n        var topElement = null;\n\n        // TODO: this might not scale if dataset is huge.\n        // consider pre-computing yPos for each X\n        for (var i = 0; i < topStack.length; i++) {\n            if (this.props.x(topStack[i]) === this.props.x(d)) {\n                topElement = topStack[i];\n                break;\n            }\n        }\n        var yPos = yScale(this.props.y0(topElement) + this.props.y(topElement));\n\n        return [html, xPos, yPos];\n    },\n    render: function render() {\n        var _props2 = this.props,\n            xAxis = _props2.xAxis,\n            yAxis = _props2.yAxis,\n            height = _props2.height,\n            width = _props2.width,\n            margin = _props2.margin,\n            colorScale = _props2.colorScale,\n            values = _props2.values,\n            label = _props2.label,\n            y = _props2.y,\n            y0 = _props2.y0,\n            x = _props2.x,\n            groupedBars = _props2.groupedBars,\n            colorByLabel = _props2.colorByLabel,\n            tickFormat = _props2.tickFormat;\n\n\n        var data = this._data;\n        var innerWidth = this._innerWidth;\n        var innerHeight = this._innerHeight;\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: height, width: width, margin: margin },\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'x axis',\n                    orientation: 'bottom',\n                    scale: xScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    tickFormat: tickFormat\n                }, xAxis)),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'y axis',\n                    orientation: 'left',\n                    scale: yScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    tickFormat: tickFormat\n                }, yAxis)),\n                _react2.default.createElement(DataSet, {\n                    data: data,\n                    xScale: xScale,\n                    yScale: yScale,\n                    colorScale: colorScale,\n                    values: values,\n                    label: label,\n                    y: y,\n                    y0: y0,\n                    x: x,\n                    onMouseEnter: this.onMouseEnter,\n                    onMouseLeave: this.onMouseLeave,\n                    groupedBars: groupedBars,\n                    colorByLabel: colorByLabel\n                }),\n                this.props.children\n            ),\n            _react2.default.createElement(_Tooltip2.default, this.state.tooltip)\n        );\n    }\n});\n\nexports.default = BarChart;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/BarChart.jsx\n// module id = 1\n// module chunks = 0\n//# sourceURL=webpack:///./src/BarChart.jsx?");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 2\n// module chunks = 0\n//# sourceURL=webpack:///external_%22React%22?");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar number = _react.PropTypes.number,\n    shape = _react.PropTypes.shape;\n\n\nvar Chart = _react2.default.createClass({\n    displayName: \"Chart\",\n\n    propTypes: {\n        height: number.isRequired,\n        width: number.isRequired,\n        margin: shape({\n            top: number,\n            bottom: number,\n            left: number,\n            right: number\n        }).isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            width = _props.width,\n            height = _props.height,\n            margin = _props.margin,\n            viewBox = _props.viewBox,\n            preserveAspectRatio = _props.preserveAspectRatio,\n            children = _props.children;\n\n\n        return _react2.default.createElement(\n            \"svg\",\n            { ref: \"svg\", width: width, height: height, viewBox: viewBox, preserveAspectRatio: preserveAspectRatio },\n            _react2.default.createElement(\n                \"g\",\n                { transform: \"translate(\" + margin.left + \", \" + margin.top + \")\" },\n                children\n            )\n        );\n    }\n});\n\nexports.default = Chart;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Chart.jsx\n// module id = 3\n// module chunks = 0\n//# sourceURL=webpack:///./src/Chart.jsx?");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func,\n    oneOf = _react.PropTypes.oneOf,\n    number = _react.PropTypes.number,\n    string = _react.PropTypes.string;\n\n\nvar Axis = _react2.default.createClass({\n    displayName: 'Axis',\n\n    propTypes: {\n        tickArguments: array,\n        tickValues: array,\n        tickFormat: func,\n        tickDirection: oneOf(['horizontal', 'vertical', 'diagonal']),\n        innerTickSize: number,\n        tickPadding: number,\n        outerTickSize: number,\n        scale: func.isRequired,\n        className: string,\n        zero: number,\n        orientation: oneOf(['top', 'bottom', 'left', 'right']).isRequired,\n        label: string\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            tickArguments: [10],\n            tickValues: null,\n            tickFormat: null,\n            tickDirection: 'horizontal',\n            innerTickSize: 6,\n            tickPadding: 3,\n            outerTickSize: 6,\n            className: 'axis',\n            zero: 0,\n            label: ''\n        };\n    },\n    _getTranslateString: function _getTranslateString() {\n        var _props = this.props,\n            orientation = _props.orientation,\n            height = _props.height,\n            width = _props.width,\n            zero = _props.zero;\n\n\n        if (orientation === 'top') {\n            return 'translate(0, ' + zero + ')';\n        } else if (orientation === 'bottom') {\n            return 'translate(0, ' + (zero == 0 ? height : zero) + ')';\n        } else if (orientation === 'left') {\n            return 'translate(' + zero + ', 0)';\n        } else if (orientation === 'right') {\n            return 'translate(' + (zero == 0 ? width : zero) + ', 0)';\n        } else {\n            return '';\n        }\n    },\n    render: function render() {\n        var _props2 = this.props,\n            height = _props2.height,\n            tickArguments = _props2.tickArguments,\n            tickValues = _props2.tickValues,\n            tickDirection = _props2.tickDirection,\n            innerTickSize = _props2.innerTickSize,\n            tickPadding = _props2.tickPadding,\n            outerTickSize = _props2.outerTickSize,\n            scale = _props2.scale,\n            orientation = _props2.orientation,\n            zero = _props2.zero;\n        var _props3 = this.props,\n            width = _props3.width,\n            className = _props3.className,\n            label = _props3.label;\n        var tickFormat = this.props.tickFormat;\n\n\n        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues;\n\n        if (!tickFormat) {\n            if (scale.tickFormat) {\n                tickFormat = scale.tickFormat.apply(scale, tickArguments);\n            } else {\n                tickFormat = function tickFormat(x) {\n                    return x;\n                };\n            }\n        }\n\n        // TODO: is there a cleaner way? removes the 0 tick if axes are crossing\n        if (zero != height && zero != width && zero != 0) {\n            ticks = ticks.filter(function (element) {\n                return element != 0;\n            });\n        }\n\n        var tickSpacing = Math.max(innerTickSize, 0) + tickPadding;\n\n        var sign = orientation === 'top' || orientation === 'left' ? -1 : 1;\n\n        var range = this._d3ScaleRange(scale);\n\n        var activeScale = scale.rangeBand ? function (e) {\n            return scale(e) + scale.rangeBand() / 2;\n        } : scale;\n\n        var transform = void 0,\n            x = void 0,\n            y = void 0,\n            x2 = void 0,\n            y2 = void 0,\n            dy = void 0,\n            textAnchor = void 0,\n            d = void 0,\n            labelElement = void 0,\n            tickRotation = 0;\n        if (orientation === 'bottom' || orientation === 'top') {\n            transform = 'translate({}, 0)';\n            x = 0;\n            y = sign * tickSpacing;\n            x2 = 0;\n            y2 = sign * innerTickSize;\n            dy = sign < 0 ? '0em' : '.71em';\n            textAnchor = 'middle';\n            d = 'M' + range[0] + ', ' + sign * outerTickSize + 'V0H' + range[1] + 'V' + sign * outerTickSize;\n            if (tickDirection === 'vertical') {\n                tickRotation = -90;\n                x = -tickSpacing;\n                y = -innerTickSize;\n                textAnchor = 'end';\n            } else if (tickDirection === 'diagonal') {\n                tickRotation = -60;\n                x = -tickSpacing;\n                y = 0;\n                textAnchor = 'end';\n            }\n\n            labelElement = _react2.default.createElement(\n                'text',\n                { className: className + ' label', textAnchor: \"end\", x: width, y: -6 },\n                label\n            );\n        } else {\n            transform = 'translate(0, {})';\n            x = sign * tickSpacing;\n            y = 0;\n            x2 = sign * innerTickSize;\n            y2 = 0;\n            dy = '.32em';\n            textAnchor = sign < 0 ? 'end' : 'start';\n            d = 'M' + sign * outerTickSize + ', ' + range[0] + 'H0V' + range[1] + 'H' + sign * outerTickSize;\n            if (tickDirection === 'vertical') {\n                tickRotation = -90;\n                x -= sign * tickSpacing;\n                y = -(tickSpacing + innerTickSize);\n                textAnchor = 'middle';\n            } else if (tickDirection === 'diagonal') {\n                tickRotation = -60;\n                x -= sign * tickSpacing;\n                y = -(tickSpacing + innerTickSize);\n                textAnchor = 'middle';\n            }\n\n            labelElement = _react2.default.createElement(\n                'text',\n                { className: className + ' label', textAnchor: 'end', y: 6, dy: orientation === 'left' ? '.75em' : '-1.25em', transform: 'rotate(-90)' },\n                label\n            );\n        }\n\n        var tickElements = ticks.map(function (tick, index) {\n            var position = activeScale(tick);\n            var translate = transform.replace('{}', position);\n            return _react2.default.createElement(\n                'g',\n                { key: tick + '.' + index, className: 'tick', transform: translate },\n                _react2.default.createElement('line', { x2: x2, y2: y2, stroke: '#aaa' }),\n                _react2.default.createElement(\n                    'text',\n                    { x: x, y: y, dy: dy, textAnchor: textAnchor, transform: 'rotate(' + tickRotation + ')' },\n                    tickFormat(tick)\n                )\n            );\n        });\n\n        var pathElement = _react2.default.createElement('path', { className: 'domain', d: d, fill: 'none', stroke: '#aaa' });\n\n        var axisBackground = _react2.default.createElement('rect', { className: 'axis-background', fill: 'none' });\n\n        return _react2.default.createElement(\n            'g',\n            { ref: 'axis', className: className, transform: this._getTranslateString(), style: { shapeRendering: 'crispEdges' } },\n            axisBackground,\n            tickElements,\n            pathElement,\n            labelElement\n        );\n    },\n    _d3ScaleExtent: function _d3ScaleExtent(domain) {\n        var start = domain[0];\n        var stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    },\n    _d3ScaleRange: function _d3ScaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : this._d3ScaleExtent(scale.range());\n    }\n});\n\nexports.default = Axis;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Axis.jsx\n// module id = 4\n// module chunks = 0\n//# sourceURL=webpack:///./src/Axis.jsx?");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar number = _react.PropTypes.number,\n    string = _react.PropTypes.string,\n    array = _react.PropTypes.array,\n    object = _react.PropTypes.object,\n    func = _react.PropTypes.func,\n    oneOfType = _react.PropTypes.oneOfType;\n\n\nvar Bar = _react2.default.createClass({\n    displayName: \"Bar\",\n\n    propTypes: {\n        width: number.isRequired,\n        height: number.isRequired,\n        x: number.isRequired,\n        y: number.isRequired,\n        fill: string.isRequired,\n        data: oneOfType([array, object]).isRequired,\n        onMouseEnter: func,\n        onMouseLeave: func,\n        onMouseClick: func\n    },\n\n    render: function render() {\n        var _props = this.props,\n            x = _props.x,\n            y = _props.y,\n            width = _props.width,\n            height = _props.height,\n            fill = _props.fill,\n            data = _props.data,\n            onMouseEnter = _props.onMouseEnter,\n            _onMouseLeave = _props.onMouseLeave,\n            onMouseClick = _props.onMouseClick;\n\n\n        return _react2.default.createElement(\"rect\", {\n            className: \"bar\",\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            fill: fill,\n            onMouseMove: function onMouseMove(e) {\n                return onMouseEnter(e, data);\n            },\n            onMouseLeave: function onMouseLeave(e) {\n                return _onMouseLeave(e);\n            },\n            omMouseClick: function omMouseClick(e) {\n                onMouseClick && onMouseClick(e, data);\n            }\n        });\n    }\n});\n\nexports.default = Bar;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Bar.jsx\n// module id = 5\n// module chunks = 0\n//# sourceURL=webpack:///./src/Bar.jsx?");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar number = _react.PropTypes.number,\n    node = _react.PropTypes.node;\n\n\nvar Tooltip = _react2.default.createClass({\n    displayName: 'Tooltip',\n\n    propTypes: {\n        top: number.isRequired,\n        left: number.isRequired,\n        html: node,\n        translate: number\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            top: 150,\n            left: 100,\n            html: '',\n            translate: 50\n        };\n    },\n    render: function render() {\n        var _props = this.props,\n            top = _props.top,\n            left = _props.left,\n            hidden = _props.hidden,\n            html = _props.html,\n            translate = _props.translate;\n\n\n        var style = {\n            display: hidden ? 'none' : 'block',\n            position: 'fixed',\n            top: top,\n            left: left,\n            transform: 'translate(-' + translate + '%, 0)',\n            pointerEvents: 'none'\n        };\n\n        return _react2.default.createElement(\n            'div',\n            { className: 'tooltip', style: style },\n            html\n        );\n    }\n});\n\nexports.default = Tooltip;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Tooltip.jsx\n// module id = 6\n// module chunks = 0\n//# sourceURL=webpack:///./src/Tooltip.jsx?");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar oneOfType = _react.PropTypes.oneOfType,\n    object = _react.PropTypes.object,\n    array = _react.PropTypes.array,\n    shape = _react.PropTypes.shape,\n    func = _react.PropTypes.func,\n    number = _react.PropTypes.number;\n\n\nvar DefaultPropsMixin = {\n    propTypes: {\n        data: oneOfType([object, array]).isRequired,\n        height: number.isRequired,\n        width: number.isRequired,\n        margin: shape({\n            top: number,\n            bottom: number,\n            left: number,\n            right: number\n        }),\n        xScale: func,\n        yScale: func,\n        colorScale: func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            data: { label: 'No data available', values: [{ x: 'No data available', y: 1 }] },\n            margin: { top: 0, bottom: 0, left: 0, right: 0 },\n            xScale: null,\n            yScale: null,\n            colorScale: _d2.default.scale.category20()\n        };\n    }\n};\n\nexports.default = DefaultPropsMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DefaultPropsMixin.jsx\n// module id = 7\n// module chunks = 0\n//# sourceURL=webpack:///./src/DefaultPropsMixin.jsx?");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 8\n// module chunks = 0\n//# sourceURL=webpack:///external_%22d3%22?");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar HeightWidthMixin = {\n    componentWillMount: function componentWillMount() {\n        this._calculateInner(this.props);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        this._calculateInner(nextProps);\n    },\n    _calculateInner: function _calculateInner(props) {\n        var height = props.height,\n            width = props.width,\n            margin = props.margin;\n\n\n        this._innerHeight = height - margin.top - margin.bottom;\n        this._innerWidth = width - margin.left - margin.right;\n    }\n};\n\nexports.default = HeightWidthMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/HeightWidthMixin.jsx\n// module id = 9\n// module chunks = 0\n//# sourceURL=webpack:///./src/HeightWidthMixin.jsx?");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar ArrayifyMixin = {\n    componentWillMount: function componentWillMount() {\n        this._arrayify(this.props);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        this._arrayify(nextProps);\n    },\n    _arrayify: function _arrayify(props) {\n        if (props.data === null) {\n            this._data = [{\n                label: 'No data available',\n                values: [{ x: 'No data available', y: 1 }]\n            }];\n        } else if (!Array.isArray(props.data)) {\n            this._data = [props.data];\n        } else {\n            this._data = props.data;\n        }\n    }\n};\n\nexports.default = ArrayifyMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ArrayifyMixin.jsx\n// module id = 10\n// module chunks = 0\n//# sourceURL=webpack:///./src/ArrayifyMixin.jsx?");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar func = _react.PropTypes.func;\n\n\nvar StackAccessorMixin = {\n    propTypes: {\n        label: func,\n        values: func,\n        x: func,\n        y: func,\n        y0: func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            label: function label(stack) {\n                return stack.label;\n            },\n            values: function values(stack) {\n                return stack.values;\n            },\n            x: function x(e) {\n                return e.x;\n            },\n            y: function y(e) {\n                return e.y;\n            },\n            y0: function y0(e) {\n                return e.y0;\n            }\n        };\n    }\n};\n\nexports.default = StackAccessorMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/StackAccessorMixin.jsx\n// module id = 11\n// module chunks = 0\n//# sourceURL=webpack:///./src/StackAccessorMixin.jsx?");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar string = _react.PropTypes.string;\n\n\nvar StackDataMixin = {\n    propTypes: {\n        offset: string\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            offset: 'zero',\n            order: 'default'\n        };\n    },\n    componentWillMount: function componentWillMount() {\n        this._stackData(this.props);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        this._stackData(nextProps);\n    },\n    _stackData: function _stackData(props) {\n        var offset = props.offset,\n            order = props.order,\n            x = props.x,\n            y = props.y,\n            values = props.values;\n\n\n        var stack = _d2.default.layout.stack().offset(offset).order(order).x(x).y(y).values(values);\n\n        this._data = stack(this._data);\n    }\n};\n\nexports.default = StackDataMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/StackDataMixin.jsx\n// module id = 12\n// module chunks = 0\n//# sourceURL=webpack:///./src/StackDataMixin.jsx?");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _d2 = __webpack_require__(8);\n\nvar _d3 = _interopRequireDefault(_d2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar number = _react.PropTypes.number;\n\n\nvar DefaultScalesMixin = {\n    propTypes: {\n        barPadding: number\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            barPadding: 0.5\n        };\n    },\n    componentWillMount: function componentWillMount() {\n        this._makeScales(this.props);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        this._makeScales(nextProps);\n    },\n    _makeScales: function _makeScales(props) {\n        var xScale = props.xScale,\n            xIntercept = props.xIntercept,\n            yScale = props.yScale,\n            yIntercept = props.yIntercept;\n\n\n        if (!xScale) {\n            var _makeXScale = this._makeXScale(props);\n\n            var _makeXScale2 = _slicedToArray(_makeXScale, 2);\n\n            this._xScale = _makeXScale2[0];\n            this._xIntercept = _makeXScale2[1];\n        } else {\n            var _ref = [xScale, xIntercept];\n            this._xScale = _ref[0];\n            this._xIntercept = _ref[1];\n        }\n\n        if (!yScale) {\n            var _makeYScale = this._makeYScale(props);\n\n            var _makeYScale2 = _slicedToArray(_makeYScale, 2);\n\n            this._yScale = _makeYScale2[0];\n            this._yIntercept = _makeYScale2[1];\n        } else {\n            var _ref2 = [yScale, yIntercept];\n            this._yScale = _ref2[0];\n            this._yIntercept = _ref2[1];\n        }\n    },\n    _makeXScale: function _makeXScale(props) {\n        var x = props.x,\n            values = props.values;\n\n        var data = this._data;\n\n        if (typeof x(values(data[0])[0]) === 'number') {\n            return this._makeLinearXScale(props);\n        } else if (typeof x(values(data[0])[0]).getMonth === 'function') {\n            return this._makeTimeXScale(props);\n        } else {\n            return this._makeOrdinalXScale(props);\n        }\n    },\n    _makeLinearXScale: function _makeLinearXScale(props) {\n        var x = props.x,\n            values = props.values;\n\n        var data = this._data;\n\n        var extentsData = data.map(function (stack) {\n            return values(stack).map(function (e) {\n                return x(e);\n            });\n        });\n        var extents = _d3.default.extent(Array.prototype.concat.apply([], extentsData));\n\n        var scale = _d3.default.scale.linear().domain(extents).range([0, this._innerWidth]);\n\n        var zero = _d3.default.max([0, scale.domain()[0]]);\n        var xIntercept = scale(zero);\n\n        return [scale, xIntercept];\n    },\n    _makeOrdinalXScale: function _makeOrdinalXScale(props) {\n        var x = props.x,\n            values = props.values,\n            barPadding = props.barPadding;\n\n\n        var scale = _d3.default.scale.ordinal().domain(values(this._data[0]).map(function (e) {\n            return x(e);\n        })).rangeRoundBands([0, this._innerWidth], barPadding);\n\n        return [scale, 0];\n    },\n    _makeTimeXScale: function _makeTimeXScale(props) {\n        var x = props.x,\n            values = props.values;\n\n\n        var minDate = _d3.default.min(values(this._data[0]), x);\n        var maxDate = _d3.default.max(values(this._data[0]), x);\n\n        var scale = _d3.default.time.scale().domain([minDate, maxDate]).range([0, this._innerWidth]);\n\n        return [scale, 0];\n    },\n    _makeYScale: function _makeYScale(props) {\n        var y = props.y,\n            values = props.values;\n\n        var data = this._data;\n\n        if (typeof y(values(data[0])[0]) === 'number') {\n            return this._makeLinearYScale(props);\n        } else {\n            return this._makeOrdinalYScale(props);\n        }\n    },\n    _makeLinearYScale: function _makeLinearYScale(props) {\n        var y = props.y,\n            y0 = props.y0,\n            values = props.values,\n            groupedBars = props.groupedBars;\n\n\n        var extentsData = this._data.map(function (stack) {\n            return values(stack).map(function (e) {\n                return groupedBars ? y(e) : y0(e) + y(e);\n            });\n        });\n        var extents = _d3.default.extent(Array.prototype.concat.apply([], extentsData));\n\n        extents = [_d3.default.min([0, extents[0]]), extents[1]];\n\n        var scale = _d3.default.scale.linear().domain(extents).range([this._innerHeight, 0]);\n\n        var zero = _d3.default.max([0, scale.domain()[0]]);\n        var yIntercept = scale(zero);\n\n        return [scale, yIntercept];\n    },\n    _makeOrdinalYScale: function _makeOrdinalYScale() {\n        var scale = _d3.default.scale.ordinal().range([this._innerHeight, 0]);\n\n        var yIntercept = scale(0);\n\n        return [scale, yIntercept];\n    }\n};\n\nexports.default = DefaultScalesMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DefaultScalesMixin.jsx\n// module id = 13\n// module chunks = 0\n//# sourceURL=webpack:///./src/DefaultScalesMixin.jsx?");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar func = _react.PropTypes.func,\n    oneOf = _react.PropTypes.oneOf,\n    bool = _react.PropTypes.bool,\n    objectOf = _react.PropTypes.objectOf,\n    number = _react.PropTypes.number;\n\n\nvar TooltipMixin = {\n    propTypes: {\n        tooltipHtml: func,\n        tooltipMode: oneOf(['mouse', 'element', 'fixed']),\n        tooltipContained: bool,\n        tooltipOffset: objectOf(number)\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            tooltip: {\n                hidden: true\n            }\n        };\n    },\n    getDefaultProps: function getDefaultProps() {\n        return {\n            tooltipMode: 'mouse',\n            tooltipOffset: { top: -35, left: 0 },\n            tooltipHtml: null,\n            tooltipContained: false\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        this._svgNode = _reactDom2.default.findDOMNode(this).getElementsByTagName('svg')[0];\n    },\n    onMouseEnter: function onMouseEnter(e, data) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        var _props = this.props,\n            margin = _props.margin,\n            tooltipMode = _props.tooltipMode,\n            tooltipOffset = _props.tooltipOffset,\n            tooltipContained = _props.tooltipContained;\n\n\n        var svg = this._svgNode;\n        var position = void 0;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = e.clientX, point.y = e.clientY;\n            point = point.matrixTransform(svg.getScreenCTM().inverse());\n            position = [point.x - margin.left, point.y - margin.top];\n        } else {\n            var rect = svg.getBoundingClientRect();\n            position = [e.clientX - rect.left - svg.clientLeft - margin.left, e.clientY - rect.top - svg.clientTop - margin.top];\n        }\n\n        var _tooltipHtml = this._tooltipHtml(data, position),\n            _tooltipHtml2 = _slicedToArray(_tooltipHtml, 3),\n            html = _tooltipHtml2[0],\n            xPos = _tooltipHtml2[1],\n            yPos = _tooltipHtml2[2];\n\n        var svgTop = svg.getBoundingClientRect().top + margin.top;\n        var svgLeft = svg.getBoundingClientRect().left + margin.left;\n\n        var top = 0;\n        var left = 0;\n\n        if (tooltipMode === 'fixed') {\n            top = svgTop + tooltipOffset.top;\n            left = svgLeft + tooltipOffset.left;\n        } else if (tooltipMode === 'element') {\n            top = svgTop + yPos + tooltipOffset.top;\n            left = svgLeft + xPos + tooltipOffset.left;\n        } else {\n            // mouse\n            top = e.clientY + tooltipOffset.top;\n            left = e.clientX + tooltipOffset.left;\n        }\n\n        function lerp(t, a, b) {\n            return (1 - t) * a + t * b;\n        }\n\n        var translate = 50;\n\n        if (tooltipContained) {\n            var t = position[0] / svg.getBoundingClientRect().width;\n            translate = lerp(t, 0, 100);\n        }\n\n        this.setState({\n            tooltip: {\n                top: top,\n                left: left,\n                hidden: false,\n                html: html,\n                translate: translate\n            }\n        });\n    },\n    onMouseLeave: function onMouseLeave(e) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        this.setState({\n            tooltip: {\n                hidden: true\n            }\n        });\n    }\n};\n\nexports.default = TooltipMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/TooltipMixin.jsx\n// module id = 14\n// module chunks = 0\n//# sourceURL=webpack:///./src/TooltipMixin.jsx?");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 15\n// module chunks = 0\n//# sourceURL=webpack:///external_%22ReactDOM%22?");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Bar = __webpack_require__(5);\n\nvar _Bar2 = _interopRequireDefault(_Bar);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = __webpack_require__(10);\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _StackAccessorMixin = __webpack_require__(11);\n\nvar _StackAccessorMixin2 = _interopRequireDefault(_StackAccessorMixin);\n\nvar _StackDataMixin = __webpack_require__(12);\n\nvar _StackDataMixin2 = _interopRequireDefault(_StackDataMixin);\n\nvar _DefaultScalesMixin = __webpack_require__(13);\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func;\n\n// receive array and return a subsampled array of size n\n//\n// a= the array;\n// n= number of sample you want output\n\nvar subSample = function subSample(a, n) {\n    var returnArray = [];\n    var m = a.length;\n    var samplingRatio = m / n;\n\n    //just round down for now in case of comma separated\n    for (var i = 0; i < m;) {\n        returnArray.push(a[Math.floor(i)]);\n        i += samplingRatio;\n    }\n    return returnArray;\n};\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        data: array.isRequired,\n        xScale: func.isRequired,\n        yScale: func.isRequired,\n        colorScale: func.isRequired,\n        values: func.isRequired,\n        label: func.isRequired,\n        x: func.isRequired,\n        y: func.isRequired,\n        y0: func.isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            data = _props.data,\n            yScale = _props.yScale,\n            colorScale = _props.colorScale,\n            values = _props.values,\n            label = _props.label,\n            y = _props.y,\n            x0 = _props.x0,\n            onMouseEnter = _props.onMouseEnter,\n            onMouseLeave = _props.onMouseLeave;\n\n\n        var height = yScale(yScale.domain()[0]);\n        var bars = data.map(function (stack) {\n            return values(stack).map(function (e, index) {\n                // maps the range [0,1] to the range [0, yDomain]\n                var yValue = height * y(e);\n                // center vertically to have upper and lower part of the waveform\n                var vy = height / 2 - yValue / 2;\n                //position x(e) * width * 2 because we want equal sapce.\n                var vx = 2 * x0 * index;\n\n                return _react2.default.createElement(_Bar2.default, {\n                    key: label(stack) + '.' + index,\n                    width: x0,\n                    height: yValue,\n                    x: vx,\n                    y: vy,\n                    fill: colorScale(Math.floor(vx)),\n                    data: e,\n                    onMouseEnter: onMouseEnter,\n                    onMouseLeave: onMouseLeave\n                });\n            });\n        });\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            bars\n        );\n    }\n});\n\nvar Waveform = _react2.default.createClass({\n    displayName: 'Waveform',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _StackAccessorMixin2.default, _StackDataMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n\n    getDefaultProps: function getDefaultProps() {\n        return {};\n    },\n    _tooltipHtml: function _tooltipHtml(d) {\n        var _ref = [this._xScale, this._yScale],\n            xScale = _ref[0],\n            yScale = _ref[1];\n\n\n        var html = this.props.tooltipHtml(this.props.x(d), this.props.y0(d), this.props.y(d));\n\n        var midPoint = xScale.rangeBand() / 2;\n        var xPos = midPoint + xScale(this.props.x(d));\n\n        var topStack = this._data[this._data.length - 1].values;\n        var topElement = null;\n\n        // TODO: this might not scale if dataset is huge.\n        // consider pre-computing yPos for each X\n        for (var i = 0; i < topStack.length; i++) {\n            if (this.props.x(topStack[i]) === this.props.x(d)) {\n                topElement = topStack[i];\n                break;\n            }\n        }\n        var yPos = yScale(this.props.y0(topElement) + this.props.y(topElement));\n\n        return [html, xPos, yPos];\n    },\n    render: function render() {\n        var _props2 = this.props,\n            height = _props2.height,\n            width = _props2.width,\n            margin = _props2.margin,\n            colorScale = _props2.colorScale,\n            values = _props2.values,\n            label = _props2.label,\n            y = _props2.y,\n            y0 = _props2.y0,\n            x = _props2.x;\n\n\n        var data = this._data;\n        var innerWidth = this._innerWidth;\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        var preserveAspectRatio = 'none';\n        var viewBox = '0 0 ' + width + ' ' + height;\n\n        // there are two options, if the samples are less than the space available\n        // we'll stretch the width of bar and inbetween spaces.\n        // Otherwise we just subSample the dataArray.\n        var barWidth = void 0;\n        if (data[0].values.length > innerWidth / 2) {\n            data[0].values = subSample(data[0].values, innerWidth / 2);\n            barWidth = 1;\n        } else {\n            barWidth = innerWidth / 2 / data[0].values.length;\n        }\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                {\n                    height: height,\n                    width: width,\n                    margin: margin,\n                    viewBox: viewBox,\n                    preserveAspectRatio: preserveAspectRatio\n                },\n                _react2.default.createElement(\n                    DataSet,\n                    {\n                        data: data,\n                        xScale: xScale,\n                        yScale: yScale,\n                        colorScale: colorScale,\n                        label: label,\n                        values: values,\n                        x: x,\n                        y: y,\n                        y0: y0,\n                        x0: barWidth,\n                        onMouseEnter: this.onMouseEnter,\n                        onMouseLeave: this.onMouseLeave\n                    },\n                    this.props.children\n                )\n            )\n        );\n    }\n});\n\nexports.default = Waveform;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Waveform.jsx\n// module id = 16\n// module chunks = 0\n//# sourceURL=webpack:///./src/Waveform.jsx?");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Tooltip = __webpack_require__(6);\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _AccessorMixin = __webpack_require__(18);\n\nvar _AccessorMixin2 = _interopRequireDefault(_AccessorMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar string = _react.PropTypes.string,\n    array = _react.PropTypes.array,\n    number = _react.PropTypes.number,\n    bool = _react.PropTypes.bool,\n    func = _react.PropTypes.func,\n    any = _react.PropTypes.any;\n\n\nvar Wedge = _react2.default.createClass({\n    displayName: 'Wedge',\n\n    propTypes: {\n        d: string.isRequired,\n        fill: string.isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            fill = _props.fill,\n            d = _props.d,\n            data = _props.data,\n            onMouseEnter = _props.onMouseEnter,\n            _onMouseLeave = _props.onMouseLeave,\n            onMouseClick = _props.onMouseClick;\n\n\n        return _react2.default.createElement('path', {\n            fill: fill,\n            d: d,\n            onMouseMove: function onMouseMove(evt) {\n                return onMouseEnter(evt, data);\n            },\n            onMouseLeave: function onMouseLeave(evt) {\n                return _onMouseLeave(evt);\n            },\n            onClick: function onClick(evt) {\n                return onMouseClick(evt, data);\n            }\n        });\n    }\n});\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        pie: array.isRequired,\n        arc: func.isRequired,\n        outerArc: func.isRequired,\n        colorScale: func.isRequired,\n        radius: number.isRequired,\n        strokeWidth: number,\n        stroke: string,\n        fill: string,\n        opacity: number,\n        x: func.isRequired,\n        hideLabels: bool\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            strokeWidth: 2,\n            stroke: '#000',\n            fill: 'none',\n            opacity: 0.3,\n            hideLabels: false\n        };\n    },\n    renderLabel: function renderLabel(wedge) {\n        var _props2 = this.props,\n            arc = _props2.arc,\n            outerArc = _props2.outerArc,\n            radius = _props2.radius,\n            strokeWidth = _props2.strokeWidth,\n            stroke = _props2.stroke,\n            fill = _props2.fill,\n            opacity = _props2.opacity,\n            x = _props2.x;\n\n\n        var labelPos = outerArc.centroid(wedge);\n        labelPos[0] = radius * (this.midAngle(wedge) < Math.PI ? 1 : -1);\n\n        var linePos = outerArc.centroid(wedge);\n        linePos[0] = radius * 0.95 * (this.midAngle(wedge) < Math.PI ? 1 : -1);\n\n        var textAnchor = this.midAngle(wedge) < Math.PI ? 'start' : 'end';\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('polyline', {\n                opacity: opacity,\n                strokeWidth: strokeWidth,\n                stroke: stroke,\n                fill: fill,\n                points: [arc.centroid(wedge), outerArc.centroid(wedge), linePos]\n            }),\n            _react2.default.createElement(\n                'text',\n                {\n                    dy: '.35em',\n                    x: labelPos[0],\n                    y: labelPos[1],\n                    textAnchor: textAnchor },\n                x(wedge.data)\n            )\n        );\n    },\n    render: function render() {\n        var _this = this;\n\n        var _props3 = this.props,\n            pie = _props3.pie,\n            arc = _props3.arc,\n            colorScale = _props3.colorScale,\n            x = _props3.x,\n            y = _props3.y,\n            onMouseEnter = _props3.onMouseEnter,\n            onMouseLeave = _props3.onMouseLeave,\n            onMouseClick = _props3.onMouseClick,\n            hideLabels = _props3.hideLabels;\n\n\n        var wedges = pie.map(function (e, index) {\n            return _react2.default.createElement(\n                'g',\n                { key: x(e.data) + '.' + y(e.data) + '.' + index, className: 'arc' },\n                _react2.default.createElement(Wedge, {\n                    data: e.data,\n                    fill: colorScale(x(e.data)),\n                    d: arc(e),\n                    onMouseEnter: onMouseEnter,\n                    onMouseLeave: onMouseLeave,\n                    onMouseClick: onMouseClick\n                }),\n                !hideLabels && !!e.value && _this.renderLabel(e)\n            );\n        });\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            wedges\n        );\n    },\n    midAngle: function midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n});\n\nvar PieChart = _react2.default.createClass({\n    displayName: 'PieChart',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _AccessorMixin2.default, _TooltipMixin2.default],\n\n    propTypes: {\n        innerRadius: number,\n        outerRadius: number,\n        labelRadius: number,\n        padRadius: string,\n        cornerRadius: number,\n        sort: any,\n        hideLabels: bool\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            innerRadius: null,\n            outerRadius: null,\n            labelRadius: null,\n            padRadius: 'auto',\n            cornerRadius: 0,\n            sort: undefined,\n            hideLabels: false\n        };\n    },\n    _tooltipHtml: function _tooltipHtml(d) {\n        var html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n        return [html, 0, 0];\n    },\n    render: function render() {\n        var _props4 = this.props,\n            data = _props4.data,\n            width = _props4.width,\n            height = _props4.height,\n            margin = _props4.margin,\n            colorScale = _props4.colorScale,\n            padRadius = _props4.padRadius,\n            cornerRadius = _props4.cornerRadius,\n            sort = _props4.sort,\n            x = _props4.x,\n            y = _props4.y,\n            values = _props4.values,\n            hideLabels = _props4.hideLabels,\n            onMouseClick = _props4.onMouseClick;\n        var _props5 = this.props,\n            innerRadius = _props5.innerRadius,\n            outerRadius = _props5.outerRadius,\n            labelRadius = _props5.labelRadius;\n\n\n        var innerWidth = this._innerWidth;\n        var innerHeight = this._innerHeight;\n\n        var pie = _d2.default.layout.pie().value(function (e) {\n            return y(e);\n        });\n\n        if (typeof sort !== 'undefined') {\n            pie = pie.sort(sort);\n        }\n\n        var radius = Math.min(innerWidth, innerHeight) / 2;\n        if (!innerRadius) {\n            innerRadius = radius * 0.8;\n        }\n\n        if (!outerRadius) {\n            outerRadius = radius * 0.4;\n        }\n\n        if (!labelRadius) {\n            labelRadius = radius * 0.9;\n        }\n\n        var arc = _d2.default.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius).padRadius(padRadius).cornerRadius(cornerRadius);\n\n        var outerArc = _d2.default.svg.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n\n        var pieData = pie(values(data));\n\n        var translation = 'translate(' + innerWidth / 2 + ', ' + innerHeight / 2 + ')';\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: height, width: width, margin: margin },\n                _react2.default.createElement(\n                    'g',\n                    { transform: translation },\n                    _react2.default.createElement(DataSet, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        colorScale: colorScale,\n                        pie: pieData,\n                        arc: arc,\n                        outerArc: outerArc,\n                        radius: radius,\n                        x: x,\n                        y: y,\n                        onMouseEnter: this.onMouseEnter,\n                        onMouseLeave: this.onMouseLeave,\n                        onMouseClick: onMouseClick,\n                        hideLabels: hideLabels\n                    })\n                ),\n                this.props.children\n            ),\n            _react2.default.createElement(_Tooltip2.default, this.state.tooltip)\n        );\n    }\n});\n\nexports.default = PieChart;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/PieChart.jsx\n// module id = 17\n// module chunks = 0\n//# sourceURL=webpack:///./src/PieChart.jsx?");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar func = _react.PropTypes.func;\n\n\nvar AccessorMixin = {\n    propTypes: {\n        label: func,\n        values: func,\n        x: func,\n        y: func,\n        y0: func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            label: function label(stack) {\n                return stack.label;\n            },\n            values: function values(stack) {\n                return stack.values;\n            },\n            x: function x(e) {\n                return e.x;\n            },\n            y: function y(e) {\n                return e.y;\n            },\n            y0: function y0() {\n                return 0;\n            }\n        };\n    }\n};\n\nexports.default = AccessorMixin;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/AccessorMixin.jsx\n// module id = 18\n// module chunks = 0\n//# sourceURL=webpack:///./src/AccessorMixin.jsx?");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = __webpack_require__(4);\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _Tooltip = __webpack_require__(6);\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = __webpack_require__(10);\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _AccessorMixin = __webpack_require__(18);\n\nvar _AccessorMixin2 = _interopRequireDefault(_AccessorMixin);\n\nvar _DefaultScalesMixin = __webpack_require__(13);\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func,\n    string = _react.PropTypes.string;\n\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        data: array.isRequired,\n        symbol: func.isRequired,\n        xScale: func.isRequired,\n        yScale: func.isRequired,\n        colorScale: func.isRequired,\n        onMouseEnter: func,\n        onMouseLeave: func\n    },\n\n    render: function render() {\n        var _props = this.props,\n            data = _props.data,\n            symbol = _props.symbol,\n            xScale = _props.xScale,\n            yScale = _props.yScale,\n            colorScale = _props.colorScale,\n            label = _props.label,\n            values = _props.values,\n            x = _props.x,\n            y = _props.y,\n            onMouseEnter = _props.onMouseEnter,\n            _onMouseLeave = _props.onMouseLeave;\n\n\n        var circles = data.map(function (stack) {\n            return values(stack).map(function (e, index) {\n                var translate = 'translate(' + xScale(x(e)) + ', ' + yScale(y(e)) + ')';\n                return _react2.default.createElement('path', {\n                    key: label(stack) + '.' + index,\n                    className: 'dot',\n                    d: symbol(),\n                    transform: translate,\n                    fill: colorScale(label(stack)),\n                    onMouseOver: function onMouseOver(evt) {\n                        return onMouseEnter(evt, e);\n                    },\n                    onMouseLeave: function onMouseLeave(evt) {\n                        return _onMouseLeave(evt);\n                    }\n                });\n            });\n        });\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            circles\n        );\n    }\n});\n\nvar ScatterPlot = _react2.default.createClass({\n    displayName: 'ScatterPlot',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _AccessorMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n\n    propTypes: {\n        rScale: func,\n        shape: string\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            rScale: null,\n            shape: 'circle'\n        };\n    },\n    _tooltipHtml: function _tooltipHtml(d) {\n        var html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n        var xPos = this._xScale(this.props.x(d));\n        var yPos = this._yScale(this.props.y(d));\n\n        return [html, xPos, yPos];\n    },\n    render: function render() {\n        var _props2 = this.props,\n            height = _props2.height,\n            width = _props2.width,\n            margin = _props2.margin,\n            colorScale = _props2.colorScale,\n            rScale = _props2.rScale,\n            shape = _props2.shape,\n            label = _props2.label,\n            values = _props2.values,\n            x = _props2.x,\n            y = _props2.y,\n            xAxis = _props2.xAxis,\n            yAxis = _props2.yAxis;\n\n\n        var data = this._data;\n        var innerWidth = this._innerWidth;\n        var innerHeight = this._innerHeight;\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n        var xIntercept = this._xIntercept;\n        var yIntercept = this._yIntercept;\n\n        var symbol = _d2.default.svg.symbol().type(shape);\n\n        if (rScale) {\n            symbol = symbol.size(rScale);\n        }\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: height, width: width, margin: margin },\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'x axis',\n                    orientation: 'bottom',\n                    scale: xScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    zero: yIntercept\n                }, xAxis)),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'y axis',\n                    orientation: 'left',\n                    scale: yScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    zero: xIntercept\n                }, yAxis)),\n                _react2.default.createElement(DataSet, {\n                    data: data,\n                    xScale: xScale,\n                    yScale: yScale,\n                    colorScale: colorScale,\n                    symbol: symbol,\n                    label: label,\n                    values: values,\n                    x: x,\n                    y: y,\n                    onMouseEnter: this.onMouseEnter,\n                    onMouseLeave: this.onMouseLeave\n                }),\n                this.props.children\n            ),\n            _react2.default.createElement(_Tooltip2.default, this.state.tooltip)\n        );\n    }\n});\n\nexports.default = ScatterPlot;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ScatterPlot.jsx\n// module id = 19\n// module chunks = 0\n//# sourceURL=webpack:///./src/ScatterPlot.jsx?");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = __webpack_require__(4);\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _Path = __webpack_require__(21);\n\nvar _Path2 = _interopRequireDefault(_Path);\n\nvar _Tooltip = __webpack_require__(6);\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = __webpack_require__(10);\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _AccessorMixin = __webpack_require__(18);\n\nvar _AccessorMixin2 = _interopRequireDefault(_AccessorMixin);\n\nvar _DefaultScalesMixin = __webpack_require__(13);\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func,\n    string = _react.PropTypes.string;\n\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        data: array.isRequired,\n        line: func.isRequired,\n        colorScale: func.isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            width = _props.width,\n            height = _props.height,\n            data = _props.data,\n            line = _props.line,\n            strokeWidth = _props.strokeWidth,\n            strokeLinecap = _props.strokeLinecap,\n            strokeDasharray = _props.strokeDasharray,\n            colorScale = _props.colorScale,\n            values = _props.values,\n            label = _props.label,\n            onMouseEnter = _props.onMouseEnter,\n            _onMouseLeave = _props.onMouseLeave;\n\n\n        var sizeId = width + 'x' + height;\n\n        var lines = data.map(function (stack, index) {\n            return _react2.default.createElement(_Path2.default, {\n                key: label(stack) + '.' + index,\n                className: 'line',\n                d: line(values(stack)),\n                stroke: colorScale(label(stack)),\n                strokeWidth: typeof strokeWidth === 'function' ? strokeWidth(label(stack)) : strokeWidth,\n                strokeLinecap: typeof strokeLinecap === 'function' ? strokeLinecap(label(stack)) : strokeLinecap,\n                strokeDasharray: typeof strokeDasharray === 'function' ? strokeDasharray(label(stack)) : strokeDasharray,\n                data: values(stack),\n                onMouseEnter: onMouseEnter,\n                onMouseLeave: _onMouseLeave,\n                style: { clipPath: 'url(#lineClip_' + sizeId + ')' }\n            });\n        });\n\n        /*\n         The <rect> below is needed in case we want to show the tooltip no matter where on the chart the mouse is.\n         Not sure if this should be used.\n         */\n        return _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement(\n                'defs',\n                null,\n                _react2.default.createElement(\n                    'clipPath',\n                    { id: 'lineClip_' + sizeId },\n                    _react2.default.createElement('rect', { width: width, height: height })\n                )\n            ),\n            lines,\n            _react2.default.createElement('rect', {\n                width: width,\n                height: height,\n                fill: 'none',\n                stroke: 'none',\n                style: { pointerEvents: 'all' },\n                onMouseMove: function onMouseMove(evt) {\n                    onMouseEnter(evt, data);\n                },\n                onMouseLeave: function onMouseLeave(evt) {\n                    _onMouseLeave(evt);\n                }\n            })\n        );\n    }\n});\n\nvar LineChart = _react2.default.createClass({\n    displayName: 'LineChart',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _AccessorMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n\n    propTypes: {\n        interpolate: string,\n        defined: func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            interpolate: 'linear',\n            defined: function defined() {\n                return true;\n            },\n            shape: 'circle',\n            shapeColor: null\n        };\n    },\n\n\n    /*\n     The code below supports finding the data values for the line closest to the mouse cursor.\n     Since it gets all events from the Rect overlaying the Chart the tooltip gets shown everywhere.\n     For now I don't want to use this method.\n     */\n    _tooltipHtml: function _tooltipHtml(data, position) {\n        var _props2 = this.props,\n            x = _props2.x,\n            y = _props2.y,\n            values = _props2.values,\n            label = _props2.label;\n\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        var xValueCursor = xScale.invert(position[0]);\n        var yValueCursor = yScale.invert(position[1]);\n\n        var xBisector = _d2.default.bisector(function (e) {\n            return x(e);\n        }).left;\n        var valuesAtX = data.map(function (stack) {\n            var idx = xBisector(values(stack), xValueCursor);\n\n            var indexRight = idx === values(stack).length ? idx - 1 : idx;\n            var valueRight = x(values(stack)[indexRight]);\n\n            var indexLeft = idx === 0 ? idx : idx - 1;\n            var valueLeft = x(values(stack)[indexLeft]);\n\n            var index = void 0;\n            if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n                index = indexRight;\n            } else {\n                index = indexLeft;\n            }\n\n            return { label: label(stack), value: values(stack)[index] };\n        });\n\n        valuesAtX.sort(function (a, b) {\n            return y(a.value) - y(b.value);\n        });\n\n        var yBisector = _d2.default.bisector(function (e) {\n            return y(e.value);\n        }).left;\n        var yIndex = yBisector(valuesAtX, yValueCursor);\n\n        var yIndexRight = yIndex === valuesAtX.length ? yIndex - 1 : yIndex;\n        var yIndexLeft = yIndex === 0 ? yIndex : yIndex - 1;\n\n        var yValueRight = y(valuesAtX[yIndexRight].value);\n        var yValueLeft = y(valuesAtX[yIndexLeft].value);\n\n        var index = void 0;\n        if (Math.abs(yValueCursor - yValueRight) < Math.abs(yValueCursor - yValueLeft)) {\n            index = yIndexRight;\n        } else {\n            index = yIndexLeft;\n        }\n\n        this._tooltipData = valuesAtX[index];\n\n        var html = this.props.tooltipHtml(valuesAtX[index].label, valuesAtX[index].value);\n\n        var xPos = xScale(valuesAtX[index].value.x);\n        var yPos = yScale(valuesAtX[index].value.y);\n\n        return [html, xPos, yPos];\n    },\n\n\n    /*\n    _tooltipHtml(data, position) {\n        let {x, y0, y, values, label} = this.props;\n        let [xScale, yScale] = [this._xScale, this._yScale];\n         let xValueCursor = xScale.invert(position[0]);\n        let yValueCursor = yScale.invert(position[1]);\n         let xBisector = d3.bisector(e => { return x(e); }).left;\n        let xIndex = xBisector(data, xScale.invert(position[0]));\n         let indexRight = xIndex == data.length ? xIndex - 1 : xIndex;\n        let valueRight = x(data[indexRight]);\n         let indexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n        let valueLeft = x(data[indexLeft]);\n         let index;\n        if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n            index = indexRight;\n        } else {\n            index = indexLeft;\n        }\n         let yValue = y(data[index]);\n        let cursorValue = d3.round(yScale.invert(position[1]), 2);\n         return this.props.tooltipHtml(yValue, cursorValue);\n    },\n     */\n\n    /*\n             stroke,\n             strokeWidth,\n             strokeLinecap,\n             strokeDasharray,\n     */\n    render: function render() {\n        var _this = this;\n\n        var _props3 = this.props,\n            height = _props3.height,\n            width = _props3.width,\n            margin = _props3.margin,\n            colorScale = _props3.colorScale,\n            interpolate = _props3.interpolate,\n            defined = _props3.defined,\n            stroke = _props3.stroke,\n            values = _props3.values,\n            label = _props3.label,\n            x = _props3.x,\n            y = _props3.y,\n            xAxis = _props3.xAxis,\n            yAxis = _props3.yAxis,\n            shape = _props3.shape,\n            shapeColor = _props3.shapeColor;\n\n\n        var data = this._data;\n        var innerWidth = this._innerWidth;\n        var innerHeight = this._innerHeight;\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n        var xIntercept = this._xIntercept;\n        var yIntercept = this._yIntercept;\n\n        var line = _d2.default.svg.line().x(function (e) {\n            return xScale(x(e));\n        }).y(function (e) {\n            return yScale(y(e));\n        }).interpolate(interpolate).defined(defined);\n\n        var tooltipSymbol = null;\n        if (!this.state.tooltip.hidden) {\n            var symbol = _d2.default.svg.symbol().type(shape);\n            var symbolColor = shapeColor ? shapeColor : colorScale(this._tooltipData.label);\n\n            var translate = this._tooltipData ? 'translate(' + xScale(x(this._tooltipData.value)) + ', ' + yScale(y(this._tooltipData.value)) + ')' : '';\n            tooltipSymbol = this.state.tooltip.hidden ? null : _react2.default.createElement('path', {\n                className: 'dot',\n                d: symbol(),\n                transform: translate,\n                fill: symbolColor,\n                onMouseEnter: function onMouseEnter(evt) {\n                    return _this.onMouseEnter(evt, data);\n                },\n                onMouseLeave: function onMouseLeave(evt) {\n                    return _this.onMouseLeave(evt);\n                }\n            });\n        }\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: height, width: width, margin: margin },\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: '\\'x axis\\'',\n                    orientation: 'bottom',\n                    scale: xScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    zero: yIntercept\n                }, xAxis)),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'y axis',\n                    orientation: 'left',\n                    scale: yScale,\n                    height: innerHeight,\n                    width: innerWidth,\n                    zero: xIntercept\n                }, yAxis)),\n                _react2.default.createElement(DataSet, _extends({\n                    height: innerHeight,\n                    width: innerWidth,\n                    data: data,\n                    line: line,\n                    colorScale: colorScale,\n                    values: values,\n                    label: label,\n                    onMouseEnter: this.onMouseEnter,\n                    onMouseLeave: this.onMouseLeave\n                }, stroke)),\n                this.props.children,\n                tooltipSymbol\n            ),\n            _react2.default.createElement(_Tooltip2.default, this.state.tooltip)\n        );\n    }\n});\n\nexports.default = LineChart;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/LineChart.jsx\n// module id = 20\n// module chunks = 0\n//# sourceURL=webpack:///./src/LineChart.jsx?");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar string = _react.PropTypes.string,\n    array = _react.PropTypes.array;\n\n\nvar Path = _react2.default.createClass({\n    displayName: 'Path',\n\n    propTypes: {\n        className: string,\n        stroke: string.isRequired,\n        strokeLinecap: string,\n        strokeWidth: string,\n        strokeDasharray: string,\n        fill: string,\n        d: string.isRequired,\n        data: array.isRequired\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            className: 'path',\n            fill: 'none',\n            strokeWidth: '2',\n            strokeLinecap: 'butt',\n            strokeDasharray: 'none'\n        };\n    },\n    render: function render() {\n        var _props = this.props,\n            className = _props.className,\n            stroke = _props.stroke,\n            strokeWidth = _props.strokeWidth,\n            strokeLinecap = _props.strokeLinecap,\n            strokeDasharray = _props.strokeDasharray,\n            fill = _props.fill,\n            d = _props.d,\n            style = _props.style,\n            data = _props.data,\n            onMouseEnter = _props.onMouseEnter,\n            _onMouseLeave = _props.onMouseLeave;\n\n\n        return _react2.default.createElement('path', {\n            className: className,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n            strokeLinecap: strokeLinecap,\n            strokeDasharray: strokeDasharray,\n            fill: fill,\n            d: d,\n            onMouseMove: function onMouseMove(evt) {\n                return onMouseEnter(evt, data);\n            },\n            onMouseLeave: function onMouseLeave(evt) {\n                return _onMouseLeave(evt);\n            },\n            style: style\n        });\n    }\n});\n\nexports.default = Path;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Path.jsx\n// module id = 21\n// module chunks = 0\n//# sourceURL=webpack:///./src/Path.jsx?");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d = __webpack_require__(8);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = __webpack_require__(4);\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _Path = __webpack_require__(21);\n\nvar _Path2 = _interopRequireDefault(_Path);\n\nvar _Tooltip = __webpack_require__(6);\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = __webpack_require__(7);\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = __webpack_require__(10);\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _StackAccessorMixin = __webpack_require__(11);\n\nvar _StackAccessorMixin2 = _interopRequireDefault(_StackAccessorMixin);\n\nvar _StackDataMixin = __webpack_require__(12);\n\nvar _StackDataMixin2 = _interopRequireDefault(_StackDataMixin);\n\nvar _DefaultScalesMixin = __webpack_require__(13);\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = __webpack_require__(14);\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar array = _react.PropTypes.array,\n    func = _react.PropTypes.func,\n    string = _react.PropTypes.string;\n\n\nvar DataSet = _react2.default.createClass({\n    displayName: 'DataSet',\n\n    propTypes: {\n        data: array.isRequired,\n        area: func.isRequired,\n        line: func.isRequired,\n        colorScale: func.isRequired,\n        stroke: func.isRequired\n    },\n\n    render: function render() {\n        var _props = this.props,\n            data = _props.data,\n            area = _props.area,\n            colorScale = _props.colorScale,\n            values = _props.values,\n            label = _props.label,\n            onMouseEnter = _props.onMouseEnter,\n            onMouseLeave = _props.onMouseLeave;\n\n\n        var areas = data.map(function (stack, index) {\n            return _react2.default.createElement(_Path2.default, {\n                key: label(stack) + '.' + index,\n                className: 'area',\n                stroke: 'none',\n                fill: colorScale(label(stack)),\n                d: area(values(stack)),\n                onMouseEnter: onMouseEnter,\n                onMouseLeave: onMouseLeave,\n                data: data\n            });\n        });\n\n        return _react2.default.createElement(\n            'g',\n            null,\n            areas\n        );\n    }\n});\n\nvar AreaChart = _react2.default.createClass({\n    displayName: 'AreaChart',\n\n    mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _StackAccessorMixin2.default, _StackDataMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n\n    propTypes: {\n        interpolate: string,\n        stroke: func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            interpolate: 'linear',\n            stroke: _d2.default.scale.category20()\n        };\n    },\n    _tooltipHtml: function _tooltipHtml(d, position) {\n        var _props2 = this.props,\n            x = _props2.x,\n            y0 = _props2.y0,\n            y = _props2.y,\n            values = _props2.values;\n\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        var xValueCursor = xScale.invert(position[0]);\n\n        var xBisector = _d2.default.bisector(function (e) {\n            return x(e);\n        }).right;\n        var xIndex = xBisector(values(d[0]), xScale.invert(position[0]));\n        xIndex = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n\n        var xIndexRight = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n        var xValueRight = x(values(d[0])[xIndexRight]);\n\n        var xIndexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n        var xValueLeft = x(values(d[0])[xIndexLeft]);\n\n        if (Math.abs(xValueCursor - xValueRight) < Math.abs(xValueCursor - xValueLeft)) {\n            xIndex = xIndexRight;\n        } else {\n            xIndex = xIndexLeft;\n        }\n\n        var yValueCursor = yScale.invert(position[1]);\n\n        var yBisector = _d2.default.bisector(function (e) {\n            return y0(values(e)[xIndex]) + y(values(e)[xIndex]);\n        }).left;\n        var yIndex = yBisector(d, yValueCursor);\n        yIndex = yIndex == d.length ? yIndex - 1 : yIndex;\n\n        var yValue = y(values(d[yIndex])[xIndex]);\n        var yValueCumulative = y0(values(d[d.length - 1])[xIndex]) + y(values(d[d.length - 1])[xIndex]);\n\n        var xValue = x(values(d[yIndex])[xIndex]);\n\n        var xPos = xScale(xValue);\n        var yPos = yScale(y0(values(d[yIndex])[xIndex]) + yValue);\n\n        return [this.props.tooltipHtml(yValue, yValueCumulative, xValue), xPos, yPos];\n    },\n    render: function render() {\n        var _props3 = this.props,\n            height = _props3.height,\n            width = _props3.width,\n            margin = _props3.margin,\n            colorScale = _props3.colorScale,\n            interpolate = _props3.interpolate,\n            stroke = _props3.stroke,\n            values = _props3.values,\n            label = _props3.label,\n            x = _props3.x,\n            y = _props3.y,\n            y0 = _props3.y0,\n            xAxis = _props3.xAxis,\n            yAxis = _props3.yAxis,\n            yOrientation = _props3.yOrientation;\n\n\n        var data = this._data;\n        var innerWidth = this._innerWidth;\n        var innerHeight = this._innerHeight;\n        var xScale = this._xScale;\n        var yScale = this._yScale;\n\n        var line = _d2.default.svg.line().x(function (e) {\n            return xScale(x(e));\n        }).y(function (e) {\n            return yScale(y0(e) + y(e));\n        }).interpolate(interpolate);\n\n        var area = _d2.default.svg.area().x(function (e) {\n            return xScale(x(e));\n        }).y0(function (e) {\n            return yScale(yScale.domain()[0] + y0(e));\n        }).y1(function (e) {\n            return yScale(y0(e) + y(e));\n        }).interpolate(interpolate);\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: height, width: width, margin: margin },\n                _react2.default.createElement(DataSet, {\n                    data: data,\n                    line: line,\n                    area: area,\n                    colorScale: colorScale,\n                    stroke: stroke,\n                    label: label,\n                    values: values,\n                    onMouseEnter: this.onMouseEnter,\n                    onMouseLeave: this.onMouseLeave\n                }),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'x axis',\n                    orientation: 'bottom',\n                    scale: xScale,\n                    height: innerHeight,\n                    width: innerWidth\n                }, xAxis)),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'y axis',\n                    orientation: yOrientation ? yOrientation : 'left',\n                    scale: yScale,\n                    height: innerHeight,\n                    width: innerWidth\n                }, yAxis)),\n                this.props.children\n            ),\n            _react2.default.createElement(_Tooltip2.default, this.state.tooltip)\n        );\n    }\n});\n\nexports.default = AreaChart;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/AreaChart.jsx\n// module id = 22\n// module chunks = 0\n//# sourceURL=webpack:///./src/AreaChart.jsx?");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _Chart = __webpack_require__(3);\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = __webpack_require__(4);\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _HeightWidthMixin = __webpack_require__(9);\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Adapted for React from https://github.com/mbostock/d3/blob/master/src/svg/brush.js\n// TODO: Add D3 License\nvar _d3SvgBrushCursor = {\n    n: 'ns-resize',\n    e: 'ew-resize',\n    s: 'ns-resize',\n    w: 'ew-resize',\n    nw: 'nwse-resize',\n    ne: 'nesw-resize',\n    se: 'nwse-resize',\n    sw: 'nesw-resize'\n};\n\nvar _d3SvgBrushResizes = [['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'], ['e', 'w'], ['n', 's'], []];\n\n// TODO: add y axis support\nvar Brush = _react2.default.createClass({\n    displayName: 'Brush',\n\n    mixins: [_HeightWidthMixin2.default],\n\n    getInitialState: function getInitialState() {\n        return {\n            resizers: _d3SvgBrushResizes[0],\n            xExtent: [0, 0],\n            yExtent: [0, 0],\n            xExtentDomain: undefined,\n            yExtentDomain: undefined\n        };\n    },\n    getDefaultProps: function getDefaultProps() {\n        return {\n            xScale: null,\n            yScale: null\n        };\n    },\n    componentWillMount: function componentWillMount() {\n        this._extent(this.props.extent);\n\n        this.setState({\n            resizers: _d3SvgBrushResizes[!this.props.xScale << 1 | !this.props.yScale]\n        });\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        // when <Brush/> is used inside a component\n        // we should not set the extent prop on every redraw of the parent, because it will\n        // stop us from actually setting the extent with the brush.\n        if (nextProps.xScale !== this.props.xScale) {\n            this._extent(nextProps.extent, nextProps.xScale);\n            this.setState({\n                resizers: _d3SvgBrushResizes[!this.props.xScale << 1 | !this.props.yScale]\n            });\n        }\n    },\n    render: function render() {\n        var _this = this;\n\n        // TODO: remove this.state this.props\n        var xRange = this.props.xScale ? this._d3ScaleRange(this.props.xScale) : null;\n        var yRange = this.props.yScale ? this._d3ScaleRange(this.props.yScale) : null;\n\n        var background = _react2.default.createElement('rect', {\n            className: 'background',\n            style: { visibility: 'visible', cursor: 'crosshair' },\n            x: xRange ? xRange[0] : '',\n            width: xRange ? xRange[1] - xRange[0] : '',\n            y: yRange ? yRange[0] : '',\n            height: yRange ? yRange[1] - yRange[0] : this._innerHeight,\n            onMouseDown: this._onMouseDownBackground\n        });\n\n        // TODO: it seems like actually we can have both x and y scales at the same time. need to find example.\n\n        var extent = void 0;\n        if (this.props.xScale) {\n            extent = _react2.default.createElement('rect', {\n                className: 'extent',\n                style: { cursor: 'move' },\n                x: this.state.xExtent[0],\n                width: this.state.xExtent[1] - this.state.xExtent[0],\n                height: this._innerHeight,\n                onMouseDown: this._onMouseDownExtent\n            });\n        }\n\n        var resizers = this.state.resizers.map(function (e) {\n            return _react2.default.createElement(\n                'g',\n                {\n                    key: e,\n                    className: 'resize ' + e,\n                    style: { cursor: _d3SvgBrushCursor[e] },\n                    transform: 'translate(' + _this.state.xExtent[+/e$/.test(e)] + ', ' + _this.state.yExtent[+/^s/.test(e)] + ')',\n                    onMouseDown: function onMouseDown(event) {\n                        _this._onMouseDownResizer(event, e);\n                    }\n                },\n                _react2.default.createElement('rect', {\n                    x: /[ew]$/.test(e) ? -3 : null,\n                    y: /^[ns]/.test(e) ? -3 : null,\n                    width: '6',\n                    height: _this._innerHeight,\n                    style: { visibility: 'hidden', display: _this._empty() ? 'none' : null }\n                })\n            );\n        });\n\n        return _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n                _Chart2.default,\n                { height: this.props.height, width: this.props.width, margin: this.props.margin },\n                _react2.default.createElement(\n                    'g',\n                    {\n                        style: { pointerEvents: 'all' },\n                        onMouseUp: this._onMouseUp,\n                        onMouseMove: this._onMouseMove\n                    },\n                    background,\n                    extent,\n                    resizers\n                ),\n                _react2.default.createElement(_Axis2.default, _extends({\n                    className: 'x axis',\n                    orientation: 'bottom',\n                    scale: this.props.xScale,\n                    height: this._innerHeight,\n                    width: this._innerWidth\n                }, this.props.xAxis)),\n                this.props.children\n            )\n        );\n    },\n\n\n    // TODO: Code duplicated in TooltipMixin.jsx, move outside.\n    _getMousePosition: function _getMousePosition(e) {\n        var svg = _reactDom2.default.findDOMNode(this).getElementsByTagName('svg')[0];\n        var position = void 0;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = e.clientX;\n            point.y = e.clientY;\n            point = point.matrixTransform(svg.getScreenCTM().inverse());\n            position = [point.x - this.props.margin.left, point.y - this.props.margin.top];\n        } else {\n            var rect = svg.getBoundingClientRect();\n            position = [e.clientX - rect.left - svg.clientLeft - this.props.margin.left, e.clientY - rect.top - svg.clientTop - this.props.margin.left];\n        }\n\n        return position;\n    },\n    _onMouseDownBackground: function _onMouseDownBackground(e) {\n        e.preventDefault();\n        var range = this._d3ScaleRange(this.props.xScale);\n        var point = this._getMousePosition(e);\n\n        var size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        var min = Math.max(range[0], Math.min(range[1], point[0]));\n        this.setState({ xExtent: [min, min + size] });\n    },\n\n\n    // TODO: use constants instead of strings\n    _onMouseDownExtent: function _onMouseDownExtent(e) {\n        e.preventDefault();\n        this._mouseMode = 'drag';\n\n        var point = this._getMousePosition(e);\n        var distanceFromBorder = point[0] - this.state.xExtent[0];\n\n        this._startPosition = distanceFromBorder;\n    },\n    _onMouseDownResizer: function _onMouseDownResizer(e, dir) {\n        e.preventDefault();\n        this._mouseMode = 'resize';\n        this._resizeDir = dir;\n    },\n    _onDrag: function _onDrag(e) {\n        var range = this._d3ScaleRange(this.props.xScale);\n        var point = this._getMousePosition(e);\n\n        var size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        var min = Math.max(range[0], Math.min(range[1], point[0] - this._startPosition));\n\n        this.setState({ xExtent: [min, min + size], xExtentDomain: null });\n    },\n    _onResize: function _onResize(e) {\n        var range = this._d3ScaleRange(this.props.xScale);\n        var point = this._getMousePosition(e);\n        // Don't let the extent go outside of its limits\n        // TODO: support clamp argument of D3\n        var min = Math.max(range[0], Math.min(range[1], point[0]));\n\n        if (this._resizeDir == 'w') {\n            if (min > this.state.xExtent[1]) {\n                this.setState({ xExtent: [this.state.xExtent[1], min], xExtentDomain: null });\n                this._resizeDir = 'e';\n            } else {\n                this.setState({ xExtent: [min, this.state.xExtent[1]], xExtentDomain: null });\n            }\n        } else if (this._resizeDir == 'e') {\n            if (min < this.state.xExtent[0]) {\n                this.setState({ xExtent: [min, this.state.xExtent[0]], xExtentDomain: null });\n                this._resizeDir = 'w';\n            } else {\n                this.setState({ xExtent: [this.state.xExtent[0], min], xExtentDomain: null });\n            }\n        }\n    },\n    _onMouseMove: function _onMouseMove(e) {\n        e.preventDefault();\n\n        if (this._mouseMode == 'resize') {\n            this._onResize(e);\n        } else if (this._mouseMode == 'drag') {\n            this._onDrag(e);\n        }\n    },\n    _onMouseUp: function _onMouseUp(e) {\n        e.preventDefault();\n\n        this._mouseMode = null;\n\n        this.props.onChange(this._extent());\n    },\n    _extent: function _extent(z, xScale) {\n        var x = xScale || this.props.xScale;\n        var y = this.props.yScale;\n\n        var _state = this.state,\n            xExtent = _state.xExtent,\n            yExtent = _state.yExtent,\n            xExtentDomain = _state.xExtentDomain,\n            yExtentDomain = _state.yExtentDomain;\n\n\n        var x0 = void 0,\n            x1 = void 0,\n            y0 = void 0,\n            y1 = void 0,\n            t = void 0;\n\n        // Invert the pixel extent to data-space.\n        if (!arguments.length) {\n            if (x) {\n                if (xExtentDomain) {\n                    x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n                } else {\n                    x0 = xExtent[0], x1 = xExtent[1];\n                    if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n                    if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                }\n            }\n            if (y) {\n                if (yExtentDomain) {\n                    y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n                } else {\n                    y0 = yExtent[0], y1 = yExtent[1];\n                    if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n                    if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                }\n            }\n            return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n        }\n\n        // Scale the data-space extent to pixels.\n        if (x) {\n            x0 = z[0], x1 = z[1];\n            if (y) x0 = x0[0], x1 = x1[0];\n            xExtentDomain = [x0, x1];\n            if (x.invert) x0 = x(x0), x1 = x(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n            if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1]; // copy-on-write\n        }\n        if (y) {\n            y0 = z[0], y1 = z[1];\n            if (x) y0 = y0[1], y1 = y1[1];\n            yExtentDomain = [y0, y1];\n            if (y.invert) y0 = y(y0), y1 = y(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n            if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1]; // copy-on-write\n        }\n\n        this.setState({ xExtent: xExtent, yExtent: yExtent, xExtentDomain: xExtentDomain, yExtentDomain: yExtentDomain });\n    },\n    _empty: function _empty() {\n        return !!this.props.xScale && this.state.xExtent[0] == this.state.xExtent[1] || !!this.props.yScale && this.state.yExtent[0] == this.state.yExtent[1];\n    },\n\n\n    // TODO: Code duplicated in Axis.jsx, move outside.\n    _d3ScaleExtent: function _d3ScaleExtent(domain) {\n        var start = domain[0];\n        var stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    },\n    _d3ScaleRange: function _d3ScaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : this._d3ScaleExtent(scale.range());\n    }\n});\n\nexports.default = Brush;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Brush.jsx\n// module id = 23\n// module chunks = 0\n//# sourceURL=webpack:///./src/Brush.jsx?");

/***/ })
/******/ ])
});
;