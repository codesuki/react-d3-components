{"version":3,"sources":["webpack://ReactD3/webpack/universalModuleDefinition","webpack://ReactD3/webpack/bootstrap","webpack://ReactD3/external \"React\"","webpack://ReactD3/./node_modules/prop-types/index.js","webpack://ReactD3/external \"d3\"","webpack://ReactD3/./src/Chart.js","webpack://ReactD3/./src/hocs/withHeightWidth.js","webpack://ReactD3/./src/utils/compose.js","webpack://ReactD3/./src/hocs/withDefaultProps.js","webpack://ReactD3/./src/hocs/withTooltip.js","webpack://ReactD3/./src/Axis.js","webpack://ReactD3/./src/Fragment.js","webpack://ReactD3/./src/hocs/withArrayify.js","webpack://ReactD3/./src/hocs/withDefaultScales.js","webpack://ReactD3/./src/utils/createRef.js","webpack://ReactD3/./src/hocs/withStackAccessor.js","webpack://ReactD3/./src/hocs/withStackData.js","webpack://ReactD3/./src/hocs/withAccessor.js","webpack://ReactD3/./src/Path.js","webpack://ReactD3/./src/utils/d3-utils.js","webpack://ReactD3/./src/utils/get-position.js","webpack://ReactD3/./src/Bar.js","webpack://ReactD3/./src/index.js","webpack://ReactD3/./src/AreaChart/index.js","webpack://ReactD3/./src/AreaChart/AreaChart.js","webpack://ReactD3/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://ReactD3/./node_modules/fbjs/lib/emptyFunction.js","webpack://ReactD3/./node_modules/fbjs/lib/invariant.js","webpack://ReactD3/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://ReactD3/./src/AreaChart/DataSet.js","webpack://ReactD3/./src/Tooltip.js","webpack://ReactD3/./src/BarChart/index.js","webpack://ReactD3/./src/BarChart/BarChart.js","webpack://ReactD3/./src/BarChart/DataSet.js","webpack://ReactD3/./src/Brush.js","webpack://ReactD3/./src/LineChart/LineChart.js","webpack://ReactD3/./src/LineChart/DataSet.js","webpack://ReactD3/./src/utils/is-func.js","webpack://ReactD3/./src/PieChart/PieChart.js","webpack://ReactD3/./src/PieChart/DataSet.js","webpack://ReactD3/./src/PieChart/Wedge.js","webpack://ReactD3/./src/ScatterPlot/ScatterPlot.js","webpack://ReactD3/./src/ScatterPlot/DataSet.js","webpack://ReactD3/./src/Waveform/Waveform.js","webpack://ReactD3/./src/Waveform/DataSet.js"],"names":["root","factory","exports","module","require","define","amd","ReactD3","React","d3","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","_react","_propTypes","_createRef","u","iterator","constructor","length","configurable","writable","f","setPrototypeOf","getPrototypeOf","__proto__","Chart","ReferenceError","Component","_this$props","this","props","width","height","margin","viewBox","preserveAspectRatio","children","svgRoot","createElement","ref","transform","concat","left","top","PropTypes","number","isRequired","shape","bottom","right","refType","assign","arguments","apply","withHeightWidth","WrappedComponent","HeightWidth","_Component","TypeError","_possibleConstructorReturn","_getPrototypeOf","innerHeight","innerWidth","_extends","calculateInner","_len","fns","Array","_key","reduce","g","_interopRequireDefault","a","defaultProps","data","label","values","x","y","xScale","yScale","colorScale","scale","category20","DefaultProps","_defineProperty","oneOfType","array","func","_Tooltip","_getPosition","b","h","withTooltip","Tooltip","_getPrototypeOf2","_this","args","_assertThisInitialized","tooltipClientX","tooltipClientY","tooltipData","tooltipHidden","createRef","getTooltipHtml","svg","current","_this$state","state","tooltipContained","tooltipMode","tooltipOffset","rect","getBoundingClientRect","position","getPositionBySvgAndEvent","clientY","clientX","_getTooltipHtml2","isArray","next","done","push","return","_slicedToArray","html","xPos","yPos","svgTop","svgLeft","translate","hidden","event","tooltipHtml","preventDefault","setState","onMouseEnter","onMouseLeave","renderTooltip","bool","oneOf","objectOf","_d3Utils","Axis","tickArguments","tickValues","tickDirection","innerTickSize","tickPadding","outerTickSize","orientation","zero","_this$props2","className","tickFormat","ticks","domain","filter","element","x2","y2","dy","textAnchor","labelElement","tickSpacing","Math","max","sign","range","d3ScaleRange","activeScale","rangeBand","tickRotation","tickElements","map","tick","index","replace","stroke","pathElement","fill","axisBackground","_getTranslateString","style","shapeRendering","_this$props3","string","ReactFragment","_ref","defaultData","withArrayify","Arrayify","getArrayData","withDefaultScales","_d2","DefaultScales","makeScales","xIntercept","yIntercept","_this$_makeXScale2","_makeXScale","_this$_makeYScale2","_makeYScale","_makeLinearXScale","getMonth","_makeTimeXScale","_makeOrdinalXScale","extentsData","stack","extents","extent","linear","_this$props4","barPadding","ordinal","rangeRoundBands","_this$props5","minDate","min","maxDate","time","_this$props6","_makeLinearYScale","_makeOrdinalYScale","_this$props7","y0","groupedBars","ReactCreateRef","elm","StackAccessor","_d","withStackData","StackData","offset","order","stackData","layout","positiveBase","negativeBase","isRequierd","withAccessor","Accessor","Path","strokeDasharray","strokeLinecap","strokeWidth","onMouseMove","d3ScaleExtent","start","stop","rangeExtent","createSVGPoint","point","matrixTransform","getScreenCTM","inverse","clientLeft","clientTop","Bar","_AreaChart","_BarChart","_Brush","_LineChart","_PieChart","_ScatterPlot","_Waveform","_DataSet","_Axis","_Chart","_Fragment","_compose","_withArrayify","_withDefaultProps","_withDefaultScales","_withHeightWidth","_withStackAccessor","_withStackData","_withTooltip","O","w","_","j","P","S","AreaChart","xValueCursor","invert","xIndex","bisector","xIndexRight","xValueRight","xIndexLeft","xValueLeft","abs","yValueCursor","yIndex","yValue","yValueCumulative","xValue","interpolate","xAxis","yAxis","yOrientation","line","area","y1","compose","withDefaultProps","withStackAccessor","emptyFunction","invariant","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","symbol","any","arrayOf","instanceOf","node","exact","checkPropTypes","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","format","error","Error","argIndex","framesToPop","_Path","DataSet","areas","propTypes","display","pointerEvents","v","BarChart","topStack","topElement","colorByLabel","_Bar","bars","serieIndex","yVal","color","_d3SvgBrushCursor","nw","ne","se","sw","_d3SvgBrushResizes","Brush","resizers","xExtent","yExtent","xExtentDomain","yExtentDomain","undefined","visibility","cursor","_getMousePosition","size","_mouseMode","distanceFromBorder","_startPosition","dir","_resizeDir","_onResize","_onDrag","onChange","_extent","nextProps","_this2","xRange","yRange","background","rectStyle","onMouseDown","_onMouseDownBackground","_onMouseDownExtent","test","_onMouseDownResizer","_empty","gStyle","onMouseUp","_onMouseUp","_onMouseMove","z","x0","x1","_this$state2","_this$state3","_withAccessor","LineChart","xBisector","valuesAtX","idx","indexRight","valueRight","indexLeft","valueLeft","sort","yIndexRight","yIndexLeft","yValueRight","yValueLeft","_tooltipData","evt","defined","shapeColor","showCustomLine","lineStructureClassName","customPointColor","customPointShape","tooltipSymbol","points","TooltipComponent","type","symbolColor","_isFunc","sizeId","lines","isFunc","clipPath","id","val","PieChart","padRadius","cornerRadius","hideLabels","innerRadius","outerRadius","labelRadius","pie","radius","arc","outerArc","pieData","translation","_Wedge","startAngle","endAngle","wedge","opacity","labelPos","centroid","midAngle","PI","linePos","wedges","labelFits","renderLabel","Wedge","ScatterPlot","rScale","circles","onMouseOver","Waveform","barWidth","returnArray","samplingRatio","floor","vy","vx"],"mappings":"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","file":"react-d3-components.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactD3\"] = factory(require(\"React\"), require(\"d3\"));\n\telse\n\t\troot[\"ReactD3\"] = factory(root[\"React\"], root[\"d3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from './utils/createRef';\n\nexport default class Chart extends Component {\n    static propTypes = {\n        height: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        margin: PropTypes.shape({\n            top: PropTypes.number,\n            bottom: PropTypes.number,\n            left: PropTypes.number,\n            right: PropTypes.number\n        }).isRequired,\n        svgRoot: refType\n    };\n\n    render() {\n        const {\n            width,\n            height,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            children,\n            svgRoot\n        } = this.props;\n\n        return (\n            <svg\n                ref={svgRoot}\n                width={width}\n                height={height}\n                viewBox={viewBox}\n                preserveAspectRatio={preserveAspectRatio}\n            >\n                <g transform={`translate(${margin.left}, ${margin.top})`}>\n                    {children}\n                </g>\n            </svg>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const withHeightWidth = WrappedComponent => {\n    class HeightWidth extends Component {\n        static propTypes = {\n            height: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n\n            margin: PropTypes.shape({\n                top: PropTypes.number,\n                left: PropTypes.number,\n                right: PropTypes.number,\n                bottom: PropTypes.number\n            }).isRequired\n        };\n\n        calculateInner() {\n            const { height, width, margin } = this.props;\n            const innerHeight = height - margin.top - margin.bottom;\n            const innerWidth = width - margin.left - margin.right;\n\n            return {\n                innerHeight,\n                innerWidth\n            };\n        }\n\n        render() {\n            return (\n                <WrappedComponent {...this.props} {...this.calculateInner()} />\n            );\n        }\n    }\n\n    return HeightWidth;\n};\n","export const compose = (...fns) =>\n    fns.reduce((f, g) => (...args) => f(g(...args)));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport d3 from 'd3';\n\nconst colorScale = d3.scale.category20();\nexport const defaultProps = {\n    data: {\n        label: 'No data available',\n        values: [{ x: 'No data available', y: 1 }]\n    },\n    margin: { top: 0, bottom: 0, left: 0, right: 0 },\n    xScale: null,\n    yScale: null,\n    colorScale\n};\n\nexport const withDefaultProps = WrappedComponent => {\n    class DefaultProps extends Component {\n        static propTypes = {\n            data: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n                .isRequired,\n            height: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            margin: PropTypes.shape({\n                top: PropTypes.number,\n                bottom: PropTypes.number,\n                left: PropTypes.number,\n                right: PropTypes.number\n            }),\n            xScale: PropTypes.func,\n            yScale: PropTypes.func,\n            colorScale: PropTypes.func\n        };\n\n        static defaultProps = defaultProps;\n\n        render() {\n            return <WrappedComponent {...this.props} />;\n        }\n    }\n\n    return DefaultProps;\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport TooltipComponent from '../Tooltip';\nimport { getPositionBySvgAndEvent } from '../utils/get-position';\nimport { createRef } from '../utils/createRef';\n\nexport const withTooltip = WrappedComponent => {\n    class Tooltip extends Component {\n        static propTypes = {\n            tooltipContained: PropTypes.bool,\n            tooltipHtml: PropTypes.func,\n            tooltipMode: PropTypes.oneOf(['mouse', 'element', 'fixed']),\n            tooltipOffset: PropTypes.objectOf(PropTypes.number)\n        };\n\n        static defaultProps = {\n            tooltipContained: false,\n            tooltipHtml: null,\n            tooltipMode: 'mouse',\n            tooltipOffset: { top: -35, left: 0 }\n        };\n\n        state = {\n            tooltipClientX: 0,\n            tooltipClientY: 0,\n            tooltipData: null,\n            tooltipHidden: true\n        };\n\n        svgRoot = createRef();\n\n        render() {\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    {...this.state}\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                    renderTooltip={this.renderTooltip}\n                    svgRoot={this.svgRoot}\n                />\n            );\n        }\n\n        renderTooltip = getTooltipHtml => {\n            const svg = this.svgRoot.current;\n            if (!svg) {\n                return null;\n            }\n\n            const {\n                tooltipClientX,\n                tooltipClientY,\n                tooltipData,\n                tooltipHidden\n            } = this.state;\n            const {\n                margin,\n                tooltipContained,\n                tooltipMode,\n                tooltipOffset\n            } = this.props;\n\n            const rect = svg.getBoundingClientRect();\n\n            const position = getPositionBySvgAndEvent({\n                svg,\n                clientY: tooltipClientY,\n                clientX: tooltipClientX,\n                margin\n            });\n\n            const [html, xPos, yPos] = getTooltipHtml(tooltipData, position);\n\n            const svgTop = rect.top + margin.top;\n            const svgLeft = rect.left + margin.left;\n\n            let top = 0;\n            let left = 0;\n\n            if (tooltipMode === 'fixed') {\n                top = svgTop + tooltipOffset.top;\n                left = svgLeft + tooltipOffset.left;\n            } else if (tooltipMode === 'element') {\n                top = svgTop + yPos + tooltipOffset.top;\n                left = svgLeft + xPos + tooltipOffset.left;\n            } else {\n                // mouse\n                top = tooltipClientY + tooltipOffset.top;\n                left = tooltipClientX + tooltipOffset.left;\n            }\n\n            let translate = 50;\n\n            if (tooltipContained) {\n                const t = position[0] / rect.width;\n                translate = lerp(t, 0, 100);\n            }\n\n            return (\n                <TooltipComponent\n                    hidden={tooltipHidden}\n                    html={html}\n                    left={left}\n                    top={top}\n                    translate={translate}\n                />\n            );\n        };\n\n        onMouseEnter = (event, data) => {\n            if (!this.props.tooltipHtml) {\n                return;\n            }\n\n            event.preventDefault();\n\n            this.setState({\n                tooltipClientX: event.clientX,\n                tooltipClientY: event.clientY,\n                tooltipData: data,\n                tooltipHidden: false\n            });\n        };\n\n        onMouseLeave = e => {\n            if (!this.props.tooltipHtml) {\n                return;\n            }\n\n            e.preventDefault();\n\n            this.setState({\n                tooltipHidden: true\n            });\n        };\n    }\n\n    return Tooltip;\n};\n\nfunction lerp(t, a, b) {\n    return (1 - t) * a + t * b;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { d3ScaleRange } from './utils/d3-utils';\n\nexport default class Axis extends Component {\n    static propTypes = {\n        tickArguments: PropTypes.array,\n        tickValues: PropTypes.array,\n        tickFormat: PropTypes.func,\n        tickDirection: PropTypes.oneOf(['horizontal', 'vertical', 'diagonal']),\n        innerTickSize: PropTypes.number,\n        tickPadding: PropTypes.number,\n        outerTickSize: PropTypes.number,\n        scale: PropTypes.func.isRequired,\n        className: PropTypes.string,\n        zero: PropTypes.number,\n        orientation: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n            .isRequired,\n        label: PropTypes.string\n    };\n\n    static defaultProps = {\n        tickArguments: [10],\n        tickValues: null,\n        tickFormat: null,\n        tickDirection: 'horizontal',\n        innerTickSize: 6,\n        tickPadding: 3,\n        outerTickSize: 6,\n        className: 'axis',\n        zero: 0,\n        label: ''\n    };\n    render() {\n        const {\n            height,\n            tickArguments,\n            tickValues,\n            tickDirection,\n            innerTickSize,\n            tickPadding,\n            outerTickSize,\n            scale,\n            orientation,\n            zero\n        } = this.props;\n\n        const { width, className, label } = this.props;\n        let { tickFormat } = this.props;\n\n        let ticks =\n            tickValues == null\n                ? scale.ticks\n                    ? scale.ticks.apply(scale, tickArguments)\n                    : scale.domain()\n                : tickValues;\n\n        if (!tickFormat) {\n            if (scale.tickFormat) {\n                tickFormat = scale.tickFormat.apply(scale, tickArguments);\n            } else {\n                tickFormat = x => x;\n            }\n        }\n\n        // TODO: is there a cleaner way? removes the 0 tick if axes are crossing\n        if (zero != height && zero != width && zero != 0) {\n            ticks = ticks.filter(element => element != 0);\n        }\n\n        const tickSpacing = Math.max(innerTickSize, 0) + tickPadding;\n\n        const sign = orientation === 'top' || orientation === 'left' ? -1 : 1;\n\n        const range = d3ScaleRange(scale);\n\n        const activeScale = scale.rangeBand\n            ? e => scale(e) + scale.rangeBand() / 2\n            : scale;\n\n        let transform,\n            x,\n            y,\n            x2,\n            y2,\n            dy,\n            textAnchor,\n            d,\n            labelElement,\n            tickRotation = 0;\n        if (orientation === 'bottom' || orientation === 'top') {\n            transform = 'translate({}, 0)';\n            x = 0;\n            y = sign * tickSpacing;\n            x2 = 0;\n            y2 = sign * innerTickSize;\n            dy = sign < 0 ? '0em' : '.71em';\n            textAnchor = 'middle';\n            d = `M${range[0]}, ${sign * outerTickSize}V0H${range[1]}V${sign *\n                outerTickSize}`;\n            if (tickDirection === 'vertical') {\n                tickRotation = -90;\n                x = -tickSpacing;\n                y = -innerTickSize;\n                textAnchor = 'end';\n            } else if (tickDirection === 'diagonal') {\n                tickRotation = -60;\n                x = -tickSpacing;\n                y = 0;\n                textAnchor = 'end';\n            }\n\n            labelElement = (\n                <text\n                    className={`${className} label`}\n                    textAnchor={'end'}\n                    x={width}\n                    y={-6}\n                >\n                    {label}\n                </text>\n            );\n        } else {\n            transform = 'translate(0, {})';\n            x = sign * tickSpacing;\n            y = 0;\n            x2 = sign * innerTickSize;\n            y2 = 0;\n            dy = '.32em';\n            textAnchor = sign < 0 ? 'end' : 'start';\n            d = `M${sign * outerTickSize}, ${range[0]}H0V${range[1]}H${sign *\n                outerTickSize}`;\n            if (tickDirection === 'vertical') {\n                tickRotation = -90;\n                x -= sign * tickSpacing;\n                y = -(tickSpacing + innerTickSize);\n                textAnchor = 'middle';\n            } else if (tickDirection === 'diagonal') {\n                tickRotation = -60;\n                x -= sign * tickSpacing;\n                y = -(tickSpacing + innerTickSize);\n                textAnchor = 'middle';\n            }\n\n            labelElement = (\n                <text\n                    className={`${className} label`}\n                    textAnchor=\"end\"\n                    y={6}\n                    dy={orientation === 'left' ? '.75em' : '-1.25em'}\n                    transform=\"rotate(-90)\"\n                >\n                    {label}\n                </text>\n            );\n        }\n\n        const tickElements = ticks.map((tick, index) => {\n            const position = activeScale(tick);\n            const translate = transform.replace('{}', position);\n            return (\n                <g\n                    key={`${tick}.${index}`}\n                    className=\"tick\"\n                    transform={translate}\n                >\n                    <line x2={x2} y2={y2} stroke=\"#aaa\" />\n                    <text\n                        x={x}\n                        y={y}\n                        dy={dy}\n                        textAnchor={textAnchor}\n                        transform={`rotate(${tickRotation})`}\n                    >\n                        {tickFormat(tick)}\n                    </text>\n                </g>\n            );\n        });\n\n        const pathElement = (\n            <path className=\"domain\" d={d} fill=\"none\" stroke=\"#aaa\" />\n        );\n\n        const axisBackground = <rect className=\"axis-background\" fill=\"none\" />;\n\n        return (\n            <g\n                ref=\"axis\"\n                className={className}\n                transform={this._getTranslateString()}\n                style={{ shapeRendering: 'crispEdges' }}\n            >\n                {axisBackground}\n                {tickElements}\n                {pathElement}\n                {labelElement}\n            </g>\n        );\n    }\n\n    _getTranslateString() {\n        const { orientation, height, width, zero } = this.props;\n\n        if (orientation === 'top') {\n            return `translate(0, ${zero})`;\n        } else if (orientation === 'bottom') {\n            return `translate(0, ${zero == 0 ? height : zero})`;\n        } else if (orientation === 'left') {\n            return `translate(${zero}, 0)`;\n        } else if (orientation === 'right') {\n            return `translate(${zero == 0 ? width : zero}, 0)`;\n        } else {\n            return '';\n        }\n    }\n}\n","import React, { Fragment as ReactFragment } from 'react';\n\nconst Fragment = ({ children, ...props }) => <div {...props}>{children}</div>;\n\nexport default (ReactFragment ? ReactFragment : Fragment);\n","import React, { Component } from 'react';\n\nexport const defaultData = {\n    label: 'No data available',\n    values: [{ x: 'No data available', y: 1 }]\n};\n\nexport const withArrayify = WrappedComponent => {\n    class Arrayify extends Component {\n        getArrayData() {\n            const { data } = this.props;\n\n            if (!data) {\n                return [defaultData];\n            } else if (!Array.isArray(data)) {\n                return [data];\n            }\n\n            return data;\n        }\n\n        render() {\n            return <WrappedComponent {...this.props} data={this.getArrayData()} />;\n        }\n    }\n\n    return Arrayify;\n};\n","import React, { Component } from 'react';\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nexport const withDefaultScales = WrappedComponent => {\n    class DefaultScales extends Component {\n        static propTypes = {\n            barPadding: PropTypes.number\n        };\n        static defaultProps = {\n            barPadding: 0.5\n        };\n\n        render() {\n            return <WrappedComponent {...this.props} {...this.makeScales()} />;\n        }\n\n        makeScales() {\n            let { xScale, xIntercept, yScale, yIntercept } = this.props;\n\n            if (!xScale) {\n                [xScale, xIntercept] = this._makeXScale();\n            }\n\n            if (!yScale) {\n                [yScale, yIntercept] = this._makeYScale();\n            }\n\n            return {\n                xScale,\n                xIntercept,\n                yScale,\n                yIntercept\n            };\n        }\n\n        _makeXScale() {\n            const { x, values, data } = this.props;\n\n            if (typeof x(values(data[0])[0]) === 'number') {\n                return this._makeLinearXScale();\n            } else if (typeof x(values(data[0])[0]).getMonth === 'function') {\n                return this._makeTimeXScale();\n            } else {\n                return this._makeOrdinalXScale();\n            }\n        }\n\n        _makeLinearXScale() {\n            const { x, values, data, innerWidth } = this.props;\n            const extentsData = data.map(stack => values(stack).map(e => x(e)));\n            const extents = d3.extent(\n                Array.prototype.concat.apply([], extentsData)\n            );\n\n            const scale = d3.scale\n                .linear()\n                .domain(extents)\n                .range([0, innerWidth]);\n\n            const zero = d3.max([0, scale.domain()[0]]);\n            const xIntercept = scale(zero);\n\n            return [scale, xIntercept];\n        }\n\n        _makeOrdinalXScale() {\n            const { x, values, barPadding, data, innerWidth } = this.props;\n            const scale = d3.scale\n                .ordinal()\n                .domain(values(data[0]).map(e => x(e)))\n                .rangeRoundBands([0, innerWidth], barPadding);\n\n            return [scale, 0];\n        }\n\n        _makeTimeXScale() {\n            const { x, values, data, innerWidth } = this.props;\n            const minDate = d3.min(values(data[0]), x);\n            const maxDate = d3.max(values(data[0]), x);\n\n            const scale = d3.time\n                .scale()\n                .domain([minDate, maxDate])\n                .range([0, innerWidth]);\n\n            return [scale, 0];\n        }\n\n        _makeYScale() {\n            const { y, values, data } = this.props;\n\n            if (typeof y(values(data[0])[0]) === 'number') {\n                return this._makeLinearYScale();\n            } else {\n                return this._makeOrdinalYScale();\n            }\n        }\n\n        _makeLinearYScale() {\n            const {\n                y,\n                y0,\n                values,\n                groupedBars,\n                data,\n                innerHeight\n            } = this.props;\n            const extentsData = data.map(stack =>\n                values(stack).map(e => groupedBars ? y(e) : y0(e) + y(e))\n            );\n            let extents = d3.extent(\n                Array.prototype.concat.apply([], extentsData)\n            );\n\n            extents = [d3.min([0, extents[0]]), extents[1]];\n\n            const scale = d3.scale\n                .linear()\n                .domain(extents)\n                .range([innerHeight, 0]);\n\n            const zero = d3.max([0, scale.domain()[0]]);\n            const yIntercept = scale(zero);\n\n            return [scale, yIntercept];\n        }\n\n        _makeOrdinalYScale() {\n            const { innerHeight } = this.props;\n            const scale = d3.scale.ordinal().range([innerHeight, 0]);\n\n            const yIntercept = scale(0);\n\n            return [scale, yIntercept];\n        }\n    }\n\n    return DefaultScales;\n};\n","import { createRef as ReactCreateRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// support new React ref API and fallback https://reactjs.org/docs/refs-and-the-dom.html\nexport const createRef =\n    ReactCreateRef ||\n    (() => {\n        let current = null;\n        const ref = elm => current = elm;\n\n        Object.defineProperty(ref, 'current', {\n            get: () => current,\n            enumerable: true,\n            configurable: true\n        });\n\n        return ref;\n    });\n\nexport const refType = PropTypes.oneOfType([PropTypes.func, PropTypes.object]);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nexport const defaultProps = {\n    label: stack => stack.label,\n    values: stack => stack.values,\n    x: e => e.x,\n    y: e => e.y,\n    y0: e => e.y0\n};\n\nexport const withStackAccessor = WrappedComponent => {\n    class StackAccessor extends Component {\n        static propTypes = {\n            label: PropTypes.func,\n            values: PropTypes.func,\n            x: PropTypes.func,\n            y: PropTypes.func,\n            y0: PropTypes.func\n        };\n\n        static defaultProps = defaultProps;\n\n        render() {\n            return <WrappedComponent {...this.props} />;\n        }\n    }\n\n    return StackAccessor;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport d3 from 'd3';\n\nexport const withStackData = WrappedComponent => {\n    class StackData extends Component {\n        static propTypes = {\n            x: PropTypes.func.isRequierd,\n            y: PropTypes.func.isRequierd,\n            values: PropTypes.func.isRequierd,\n            data: PropTypes.array.isRequierd,\n            offset: PropTypes.string,\n            order: PropTypes.string\n        };\n\n        static defaultProps = {\n            offset: 'zero',\n            order: 'default'\n        };\n\n        stackData() {\n            const { offset, order, x, y, values, data } = this.props;\n            const stack = d3.layout\n                .stack()\n                .offset(offset)\n                .order(order)\n                .x(x)\n                .y(y)\n                .values(values);\n            const stackData = stack(data);\n\n            for (let m = 0; m < values(stackData[0]).length; m++) {\n                let positiveBase = 0;\n                let negativeBase = 0;\n                for (let n = 0; n < stackData.length; n++) {\n                    const value = y(values(stackData[n])[m]);\n                    if (value < 0) {\n                        values(stackData[n])[m].y0 = negativeBase;\n                        negativeBase += value;\n                    } else {\n                        values(stackData[n])[m].y0 = positiveBase;\n                        positiveBase += value;\n                    }\n                }\n            }\n\n            return stackData;\n        }\n        render() {\n            return <WrappedComponent {...this.props} data={this.stackData()} />;\n        }\n    }\n\n    return StackData;\n};\n","import React, { Component } from 'react';\nimport { func } from 'prop-types';\n\nexport const defaultProps = {\n    label: stack => stack.label,\n    values: stack => stack.values,\n    x: e => e.x,\n    y: e => e.y,\n    y0: () => 0\n};\n\nexport const withAccessor = WrappedComponent => {\n    class Accessor extends Component {\n        static propTypes = {\n            label: func,\n            values: func,\n            x: func,\n            y: func,\n            y0: func\n        };\n\n        static defaultProps = defaultProps;\n\n        render() {\n            return <WrappedComponent {...this.props} />;\n        }\n    }\n\n    return Accessor;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Path extends Component {\n    static propTypes = {\n        className: PropTypes.string,\n        d: PropTypes.string.isRequired,\n        data: PropTypes.array.isRequired,\n        fill: PropTypes.string,\n        stroke: PropTypes.string.isRequired,\n        strokeDasharray: PropTypes.string,\n        strokeLinecap: PropTypes.string,\n        strokeWidth: PropTypes.string\n    };\n\n    static defaultProps = {\n        className: 'path',\n        fill: 'none',\n        strokeDasharray: 'none',\n        strokeLinecap: 'butt',\n        strokeWidth: '2'\n    };\n\n    onMouseMove = event => {\n        this.props.onMouseEnter(event, this.props.data);\n    };\n\n    render() {\n        const {\n            className,\n            d,\n            fill,\n            onMouseLeave,\n            stroke,\n            strokeDasharray,\n            strokeLinecap,\n            strokeWidth,\n            style\n        } = this.props;\n\n        return (\n            <path\n                className={className}\n                d={d}\n                fill={fill}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={this.onMouseMove}\n                stroke={stroke}\n                strokeDasharray={strokeDasharray}\n                strokeLinecap={strokeLinecap}\n                strokeWidth={strokeWidth}\n                style={style}\n            />\n        );\n    }\n}\n","export const d3ScaleExtent = domain => {\n    const start = domain[0];\n    const stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n};\n\nexport const d3ScaleRange = scale => scale.rangeExtent\n        ? scale.rangeExtent()\n        : d3ScaleExtent(scale.range());\n","export const getPositionBySvgAndEvent = ({ svg, clientX, clientY, margin }) => {\n    if (svg.createSVGPoint) {\n        let point = svg.createSVGPoint();\n\n        point.x = clientX;\n        point.y = clientY;\n        point = point.matrixTransform(svg.getScreenCTM().inverse());\n        return [point.x - margin.left, point.y - margin.top];\n    }\n    const rect = svg.getBoundingClientRect();\n\n    return [\n        clientX - rect.left - svg.clientLeft - margin.left,\n        clientY - rect.top - svg.clientTop - margin.left\n    ];\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Bar extends Component {\n    static propTypes = {\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n        fill: PropTypes.string.isRequired,\n        data: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n            .isRequired,\n        onMouseEnter: PropTypes.func,\n        onMouseLeave: PropTypes.func\n    };\n\n    onMouseMove = event => this.props.onMouseEnter(event, this.props.data);\n    onMouseLeave = event => this.props.onMouseLeave(event);\n\n    render() {\n        const { x, y, width, height, fill } = this.props;\n\n        return (\n            <rect\n                className=\"bar\"\n                x={x}\n                y={y}\n                width={width}\n                height={height}\n                fill={fill}\n                onMouseMove={this.onMouseMove}\n                onMouseLeave={this.onMouseLeave}\n            />\n        );\n    }\n}\n","export { default as AreaChart } from './AreaChart';\nexport { default as BarChart } from './BarChart';\nexport { default as Brush } from './Brush';\nexport { default as LineChart } from './LineChart/LineChart';\nexport { default as PieChart } from './PieChart/PieChart';\nexport { default as ScatterPlot } from './ScatterPlot/ScatterPlot';\nexport { default as Waveform } from './Waveform/Waveform';\n","export { default } from './AreaChart';\n","import d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport DataSet from './DataSet';\nimport Axis from '../Axis';\nimport Chart from '../Chart';\nimport Fragment from '../Fragment';\nimport { compose } from '../utils/compose';\nimport { withArrayify } from '../hocs/withArrayify';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withDefaultScales } from '../hocs/withDefaultScales';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withStackAccessor } from '../hocs/withStackAccessor';\nimport { withStackData } from '../hocs/withStackData';\nimport { withTooltip } from '../hocs/withTooltip';\n\nclass AreaChart extends Component {\n    static propTypes = {\n        interpolate: PropTypes.string,\n        stroke: PropTypes.func\n    };\n\n    static defaultProps = {\n        interpolate: 'linear',\n        stroke: d3.scale.category20()\n    };\n\n    getTooltipHtml = (d, position) => {\n        const { x, y0, y, values, label, xScale, yScale } = this.props;\n\n        const xValueCursor = xScale.invert(position[0]);\n\n        const xBisector = d3.bisector(e => x(e)).right;\n        let xIndex = xBisector(values(d[0]), xScale.invert(position[0]));\n        xIndex = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n\n        const xIndexRight = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n        const xValueRight = x(values(d[0])[xIndexRight]);\n\n        const xIndexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n        const xValueLeft = x(values(d[0])[xIndexLeft]);\n\n        if (\n            Math.abs(xValueCursor - xValueRight) <\n            Math.abs(xValueCursor - xValueLeft)\n        ) {\n            xIndex = xIndexRight;\n        } else {\n            xIndex = xIndexLeft;\n        }\n\n        const yValueCursor = yScale.invert(position[1]);\n\n        const yBisector = d3.bisector(\n            e => y0(values(e)[xIndex]) + y(values(e)[xIndex])\n        ).left;\n        let yIndex = yBisector(d, yValueCursor);\n        yIndex = yIndex == d.length ? yIndex - 1 : yIndex;\n\n        const yValue = y(values(d[yIndex])[xIndex]);\n        const yValueCumulative =\n            y0(values(d[d.length - 1])[xIndex]) +\n            y(values(d[d.length - 1])[xIndex]);\n\n        const xValue = x(values(d[yIndex])[xIndex]);\n\n        const xPos = xScale(xValue);\n        const yPos = yScale(y0(values(d[yIndex])[xIndex]) + yValue);\n\n        return [\n            this.props.tooltipHtml(\n                yValue,\n                yValueCumulative,\n                xValue,\n                label(d[yIndex])\n            ),\n            xPos,\n            yPos\n        ];\n    };\n\n    render() {\n        const {\n            height,\n            width,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            colorScale,\n            interpolate,\n            stroke,\n            values,\n            label,\n            x,\n            y,\n            y0,\n            xAxis,\n            yAxis,\n            yOrientation,\n            xScale,\n            yScale,\n            data,\n            innerWidth,\n            innerHeight,\n            svgRoot\n        } = this.props;\n\n        const line = d3.svg\n            .line()\n            .x(e => xScale(x(e)))\n            .y(e => yScale(y0(e) + y(e)))\n            .interpolate(interpolate);\n\n        const area = d3.svg\n            .area()\n            .x(e => xScale(x(e)))\n            .y0(e => yScale(yScale.domain()[0] + y0(e)))\n            .y1(e => yScale(y0(e) + y(e)))\n            .interpolate(interpolate);\n\n        return (\n            <Fragment>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    svgRoot={svgRoot}\n                    preserveAspectRatio={preserveAspectRatio}\n                >\n                    <DataSet\n                        data={data}\n                        line={line}\n                        area={area}\n                        colorScale={colorScale}\n                        stroke={stroke}\n                        label={label}\n                        values={values}\n                        onMouseEnter={this.props.onMouseEnter}\n                        onMouseLeave={this.props.onMouseLeave}\n                    />\n                    <Axis\n                        className=\"x axis\"\n                        orientation=\"bottom\"\n                        scale={xScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        {...xAxis}\n                    />\n                    <Axis\n                        className=\"y axis\"\n                        orientation={yOrientation || 'left'}\n                        scale={yScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        {...yAxis}\n                    />\n                    {this.props.children}\n                </Chart>\n                {this.props.renderTooltip(this.getTooltipHtml)}\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withArrayify,\n    withStackAccessor,\n    withStackData,\n    withDefaultScales,\n    withTooltip\n)(AreaChart);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Path from '../Path';\n\nconst DataSet = ({ area, colorScale, data, label, values, ...props }) => {\n    const areas = data.map((stack, index) =>\n        <Path\n            {...props}\n            className=\"area\"\n            d={area(values(stack))}\n            data={data}\n            fill={colorScale(label(stack))}\n            key={`${label(stack)}.${index}`}\n            stroke=\"none\"\n        />\n    );\n\n    return <g>{areas}</g>;\n};\n\nDataSet.propTypes = {\n    area: PropTypes.func.isRequired,\n    colorScale: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    line: PropTypes.func.isRequired,\n    stroke: PropTypes.func.isRequired\n};\n\nexport default DataSet;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Tooltip extends Component {\n    static propTypes = {\n        top: PropTypes.number.isRequired,\n        left: PropTypes.number.isRequired,\n        hidden: PropTypes.bool.isRequired,\n        html: PropTypes.node,\n        translate: PropTypes.number\n    };\n\n    static defaultProps = {\n        html: '',\n        translate: 50\n    };\n\n    render() {\n        const { top, left, html, translate, hidden } = this.props;\n\n        const style = {\n            display: hidden ? 'none' : '',\n            left,\n            pointerEvents: 'none',\n            position: 'fixed',\n            top,\n            transform: `translate(-${translate}%, 0)`\n        };\n\n        return (\n            <div className=\"tooltip\" style={style}>\n                {html}\n            </div>\n        );\n    }\n}\n","export { default } from './BarChart';\n","import React, { Component } from 'react';\n\nimport DataSet from './DataSet';\nimport Axis from '../Axis';\nimport Chart from '../Chart';\nimport Fragment from '../Fragment';\nimport { compose } from '../utils/compose';\nimport { withArrayify } from '../hocs/withArrayify';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withDefaultScales } from '../hocs/withDefaultScales';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withStackAccessor } from '../hocs/withStackAccessor';\nimport { withStackData } from '../hocs/withStackData';\nimport { withTooltip } from '../hocs/withTooltip';\n\nclass BarChart extends Component {\n    static defaultProps = {\n        colorByLabel: true\n    };\n\n    getTooltipHtml = d => {\n        const { yScale, xScale, data, x, y, y0 } = this.props;\n        const html = this.props.tooltipHtml(x(d), y0(d), y(d));\n        const midPoint = xScale.rangeBand() / 2;\n        const xPos = midPoint + xScale(x(d));\n        const topStack = data[data.length - 1].values;\n\n        let topElement = null;\n\n        // TODO: this might not scale if dataset is huge.\n        // consider pre-computing yPos for each X\n        for (let i = 0; i < topStack.length; i++) {\n            if (x(topStack[i]) === x(d)) {\n                topElement = topStack[i];\n                break;\n            }\n        }\n\n        const yPos = yScale(y0(topElement) + y(topElement));\n\n        return [html, xPos, yPos];\n    };\n\n    render() {\n        const {\n            xAxis,\n            yAxis,\n            height,\n            width,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            colorScale,\n            values,\n            label,\n            y,\n            y0,\n            x,\n            groupedBars,\n            colorByLabel,\n            tickFormat,\n            data,\n            innerWidth,\n            innerHeight,\n            xScale,\n            yScale,\n            yIntercept,\n            svgRoot\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    preserveAspectRatio={preserveAspectRatio}\n                    svgRoot={svgRoot}\n                >\n                    <DataSet\n                        data={data}\n                        xScale={xScale}\n                        yScale={yScale}\n                        colorScale={colorScale}\n                        values={values}\n                        label={label}\n                        y={y}\n                        y0={y0}\n                        x={x}\n                        onMouseEnter={this.props.onMouseEnter}\n                        onMouseLeave={this.props.onMouseLeave}\n                        groupedBars={groupedBars}\n                        colorByLabel={colorByLabel}\n                    />\n                    <Axis\n                        className=\"x axis\"\n                        orientation=\"bottom\"\n                        scale={xScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        zero={yIntercept}\n                        tickFormat={tickFormat}\n                        {...xAxis}\n                    />\n                    <Axis\n                        className=\"y axis\"\n                        orientation=\"left\"\n                        scale={yScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        tickFormat={tickFormat}\n                        {...yAxis}\n                    />\n                    {this.props.children}\n                </Chart>\n                {this.props.renderTooltip(this.getTooltipHtml)}\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withArrayify,\n    withStackAccessor,\n    withStackData,\n    withDefaultScales,\n    withTooltip\n)(BarChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Bar from '../Bar';\n\nconst DataSet = ({\n    data,\n    xScale,\n    yScale,\n    colorScale,\n    values,\n    label,\n    x,\n    y,\n    y0,\n    onMouseEnter,\n    onMouseLeave,\n    groupedBars,\n    colorByLabel\n}) => {\n    let bars;\n    if (groupedBars) {\n        bars = data.map((stack, serieIndex) =>\n            values(stack).map((e, index) => {\n                const yVal = y(e) < 0 ? yScale(0) : yScale(y(e));\n                return (\n                    <Bar\n                        key={`${label(stack)}.${index}`}\n                        width={xScale.rangeBand() / data.length}\n                        height={Math.abs(yScale(0) - yScale(y(e)))}\n                        x={\n                            xScale(x(e)) +\n                            xScale.rangeBand() * serieIndex / data.length\n                        }\n                        y={yVal}\n                        fill={colorScale(label(stack))}\n                        data={e}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                    />\n                );\n            })\n        );\n    } else {\n        bars = data.map(stack =>\n            values(stack).map((e, index) => {\n                const color = colorByLabel\n                    ? colorScale(label(stack))\n                    : colorScale(x(e));\n                const yVal = y(e) < 0 ? yScale(y0(e)) : yScale(y0(e) + y(e));\n                return (\n                    <Bar\n                        key={`${label(stack)}.${index}`}\n                        width={xScale.rangeBand()}\n                        height={Math.abs(yScale(y0(e) + y(e)) - yScale(y0(e)))}\n                        x={xScale(x(e))}\n                        y={yVal}\n                        fill={color}\n                        data={e}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                    />\n                );\n            })\n        );\n    }\n\n    return <g>{bars}</g>;\n};\n\nDataSet.propTypes = {\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    colorScale: PropTypes.func.isRequired,\n    values: PropTypes.func.isRequired,\n    label: PropTypes.func.isRequired,\n    x: PropTypes.func.isRequired,\n    y: PropTypes.func.isRequired,\n    y0: PropTypes.func.isRequired\n};\n\nexport default DataSet;\n","import React, { Component } from 'react';\n\nimport Chart from './Chart';\nimport Axis from './Axis';\n\nimport { createRef } from './utils/createRef';\nimport { d3ScaleRange } from './utils/d3-utils';\nimport { getPositionBySvgAndEvent } from './utils/get-position';\nimport { withHeightWidth } from './hocs/withHeightWidth';\n\n// Adapted for React from https://github.com/mbostock/d3/blob/master/src/svg/brush.js\n// TODO: Add D3 License\nconst _d3SvgBrushCursor = {\n    n: 'ns-resize',\n    e: 'ew-resize',\n    s: 'ns-resize',\n    w: 'ew-resize',\n    nw: 'nwse-resize',\n    ne: 'nesw-resize',\n    se: 'nwse-resize',\n    sw: 'nesw-resize'\n};\n\nconst _d3SvgBrushResizes = [\n    ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'],\n    ['e', 'w'],\n    ['n', 's'],\n    []\n];\n\n// TODO: add y axis support\nclass Brush extends Component {\n    static defaultProps = {\n        xScale: null,\n        yScale: null\n    };\n\n    state = {\n        resizers: _d3SvgBrushResizes[0],\n        xExtent: [0, 0],\n        yExtent: [0, 0],\n        xExtentDomain: undefined,\n        yExtentDomain: undefined\n    };\n\n    componentWillMount() {\n        this._extent(this.props.extent);\n\n        this.setState({\n            resizers:\n                _d3SvgBrushResizes[\n                    (!this.props.xScale << 1) | !this.props.yScale\n                ]\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // when <Brush/> is used inside a component\n        // we should not set the extent prop on every redraw of the parent, because it will\n        // stop us from actually setting the extent with the brush.\n        if (nextProps.xScale !== this.props.xScale) {\n            this._extent(nextProps.extent, nextProps.xScale);\n            this.setState({\n                resizers:\n                    _d3SvgBrushResizes[\n                        (!this.props.xScale << 1) | !this.props.yScale\n                    ]\n            });\n        }\n    }\n\n    rectStyle = { visibility: 'visible', cursor: 'crosshair' };\n    gStyle = { pointerEvents: 'all' };\n    svgRoot = createRef();\n    render() {\n        const { innerHeight, innerWidth, xScale, yScale } = this.props;\n        const { xExtent, yExtent } = this.state;\n\n        const xRange = xScale ? d3ScaleRange(xScale) : null;\n        const yRange = yScale ? d3ScaleRange(yScale) : null;\n\n        const background = (\n            <rect\n                className=\"background\"\n                style={this.rectStyle}\n                x={xRange ? xRange[0] : ''}\n                y={yRange ? yRange[0] : ''}\n                width={xRange ? xRange[1] - xRange[0] : ''}\n                height={yRange ? yRange[1] - yRange[0] : innerHeight}\n                onMouseDown={this._onMouseDownBackground}\n            />\n        );\n\n        // TODO: it seems like actually we can have both x and y scales at the same time. need to find example.\n\n        let extent;\n\n        if (xScale) {\n            extent = (\n                <rect\n                    className=\"extent\"\n                    style={{ cursor: 'move' }}\n                    x={xExtent[0]}\n                    width={xExtent[1] - xExtent[0]}\n                    height={innerHeight}\n                    onMouseDown={this._onMouseDownExtent}\n                />\n            );\n        }\n\n        const resizers = this.state.resizers.map(e => (\n            <g\n                key={e}\n                className={`resize ${e}`}\n                style={{ cursor: _d3SvgBrushCursor[e] }}\n                transform={`translate(${xExtent[+/e$/.test(e)]}, ${\n                    yExtent[+/^s/.test(e)]\n                })`}\n                onMouseDown={event => {\n                    this._onMouseDownResizer(event, e);\n                }}\n            >\n                <rect\n                    x={/[ew]$/.test(e) ? -3 : null}\n                    y={/^[ns]/.test(e) ? -3 : null}\n                    width=\"6\"\n                    height={innerHeight}\n                    style={{\n                        visibility: 'hidden',\n                        display: this._empty() ? 'none' : null\n                    }}\n                />\n            </g>\n        ));\n\n        const {\n            height,\n            width,\n            margin,\n            viewBox,\n            preserveAspectRatio\n        } = this.props;\n\n        return (\n            <Chart\n                height={height}\n                width={width}\n                margin={margin}\n                viewBox={viewBox}\n                preserveAspectRatio={preserveAspectRatio}\n                svgRoot={this.svgRoot}\n            >\n                <g\n                    style={this.gStyle}\n                    onMouseUp={this._onMouseUp}\n                    onMouseMove={this._onMouseMove}\n                >\n                    {background}\n                    {extent}\n                    {resizers}\n                </g>\n                <Axis\n                    className=\"x axis\"\n                    orientation=\"bottom\"\n                    scale={xScale}\n                    height={innerHeight}\n                    width={innerWidth}\n                    {...this.props.xAxis}\n                />\n                {this.props.children}\n            </Chart>\n        );\n    }\n\n    // TODO: Code duplicated in TooltipMixin.jsx, move outside.\n    _getMousePosition(e) {\n        const svg = this.svgRoot.current;\n\n        return getPositionBySvgAndEvent({\n            svg,\n            clientY: e.clientY,\n            clientX: e.clientX,\n            margin: this.props.margin\n        });\n    }\n\n    _onMouseDownBackground = e => {\n        e.preventDefault();\n        const range = d3ScaleRange(this.props.xScale);\n        const point = this._getMousePosition(e);\n\n        const size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        const min = Math.max(range[0], Math.min(range[1], point[0]));\n        this.setState({ xExtent: [min, min + size] });\n    };\n\n    // TODO: use constants instead of strings\n    _onMouseDownExtent = e => {\n        e.preventDefault();\n        this._mouseMode = 'drag';\n\n        const point = this._getMousePosition(e);\n        const distanceFromBorder = point[0] - this.state.xExtent[0];\n\n        this._startPosition = distanceFromBorder;\n    };\n\n    _onMouseDownResizer = (e, dir) => {\n        e.preventDefault();\n        this._mouseMode = 'resize';\n        this._resizeDir = dir;\n    };\n\n    _onDrag = e => {\n        const range = d3ScaleRange(this.props.xScale);\n        const point = this._getMousePosition(e);\n\n        const size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        const min = Math.max(\n            range[0],\n            Math.min(range[1], point[0] - this._startPosition)\n        );\n\n        this.setState({ xExtent: [min, min + size], xExtentDomain: null });\n    };\n\n    _onResize = e => {\n        const { xExtent } = this.state;\n        const range = d3ScaleRange(this.props.xScale);\n        const point = this._getMousePosition(e);\n        // Don't let the extent go outside of its limits\n        // TODO: support clamp argument of D3\n        const min = Math.max(range[0], Math.min(range[1], point[0]));\n\n        if (this._resizeDir === 'w') {\n            if (min > xExtent[1]) {\n                this.setState({\n                    xExtent: [xExtent[1], min],\n                    xExtentDomain: null\n                });\n                this._resizeDir = 'e';\n            } else {\n                this.setState({\n                    xExtent: [min, xExtent[1]],\n                    xExtentDomain: null\n                });\n            }\n        } else if (this._resizeDir === 'e') {\n            if (min < xExtent[0]) {\n                this.setState({\n                    xExtent: [min, xExtent[0]],\n                    xExtentDomain: null\n                });\n                this._resizeDir = 'w';\n            } else {\n                this.setState({\n                    xExtent: [xExtent[0], min],\n                    xExtentDomain: null\n                });\n            }\n        }\n    };\n\n    _onMouseMove = e => {\n        e.preventDefault();\n\n        if (this._mouseMode === 'resize') {\n            this._onResize(e);\n        } else if (this._mouseMode === 'drag') {\n            this._onDrag(e);\n        }\n    };\n\n    _onMouseUp = e => {\n        e.preventDefault();\n\n        this._mouseMode = null;\n\n        this.props.onChange(this._extent());\n    };\n\n    _extent(z, xScale) {\n        const x = xScale || this.props.xScale;\n        const y = this.props.yScale;\n\n        let { xExtent, yExtent, xExtentDomain, yExtentDomain } = this.state;\n\n        let x0, x1, y0, y1, t;\n\n        // Invert the pixel extent to data-space.\n        if (!arguments.length) {\n            if (x) {\n                if (xExtentDomain) {\n                    (x0 = xExtentDomain[0]), (x1 = xExtentDomain[1]);\n                } else {\n                    (x0 = xExtent[0]), (x1 = xExtent[1]);\n                    if (x.invert) (x0 = x.invert(x0)), (x1 = x.invert(x1));\n                    if (x1 < x0) (t = x0), (x0 = x1), (x1 = t);\n                }\n            }\n            if (y) {\n                if (yExtentDomain) {\n                    (y0 = yExtentDomain[0]), (y1 = yExtentDomain[1]);\n                } else {\n                    (y0 = yExtent[0]), (y1 = yExtent[1]);\n                    if (y.invert) (y0 = y.invert(y0)), (y1 = y.invert(y1));\n                    if (y1 < y0) (t = y0), (y0 = y1), (y1 = t);\n                }\n            }\n            return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n        }\n\n        // Scale the data-space extent to pixels.\n        if (x) {\n            (x0 = z[0]), (x1 = z[1]);\n            if (y) (x0 = x0[0]), (x1 = x1[0]);\n            xExtentDomain = [x0, x1];\n            if (x.invert) (x0 = x(x0)), (x1 = x(x1));\n            if (x1 < x0) (t = x0), (x0 = x1), (x1 = t);\n            if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1]; // copy-on-write\n        }\n        if (y) {\n            (y0 = z[0]), (y1 = z[1]);\n            if (x) (y0 = y0[1]), (y1 = y1[1]);\n            yExtentDomain = [y0, y1];\n            if (y.invert) (y0 = y(y0)), (y1 = y(y1));\n            if (y1 < y0) (t = y0), (y0 = y1), (y1 = t);\n            if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1]; // copy-on-write\n        }\n\n        this.setState({ xExtent, yExtent, xExtentDomain, yExtentDomain });\n    }\n\n    _empty() {\n        const { xExtent, yExtent } = this.state;\n        return (\n            (!!this.props.xScale && xExtent[0] == xExtent[1]) ||\n            (!!this.props.yScale && yExtent[0] == yExtent[1])\n        );\n    }\n}\n\nexport default withHeightWidth(Brush);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport d3 from 'd3';\n\nimport DataSet from './DataSet';\nimport Axis from '../Axis';\nimport Chart from '../Chart';\nimport Fragment from '../Fragment';\nimport { compose } from '../utils/compose';\nimport { withAccessor } from '../hocs/withAccessor';\nimport { withArrayify } from '../hocs/withArrayify';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withDefaultScales } from '../hocs/withDefaultScales';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withTooltip } from '../hocs/withTooltip';\n\nclass LineChart extends Component {\n    static propTypes = {\n        interpolate: PropTypes.string,\n        defined: PropTypes.func,\n        tooltipHidden: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        interpolate: 'linear',\n        defined: () => true,\n        shape: 'circle',\n        shapeColor: null,\n        showCustomLine: false,\n        lineStructureClassName: 'dot',\n        customPointColor: 'blue',\n        customPointShape: 'circle'\n    };\n\n    /*\n     The code below supports finding the data values for the line closest to the mouse cursor.\n     Since it gets all events from the Rect overlaying the Chart the tooltip gets shown everywhere.\n     For now I don't want to use this method.\n     */\n    getTooltipHtml = (data, position) => {\n        const { x, y, values, label, xScale, yScale } = this.props;\n\n        const xValueCursor = xScale.invert(position[0]);\n        const yValueCursor = yScale.invert(position[1]);\n\n        const xBisector = d3.bisector(e => x(e)).left;\n        const valuesAtX = data.map(stack => {\n            const idx = xBisector(values(stack), xValueCursor);\n\n            const indexRight = idx === values(stack).length ? idx - 1 : idx;\n            const valueRight = x(values(stack)[indexRight]);\n\n            const indexLeft = idx === 0 ? idx : idx - 1;\n            const valueLeft = x(values(stack)[indexLeft]);\n\n            let index;\n            if (\n                Math.abs(xValueCursor - valueRight) <\n                Math.abs(xValueCursor - valueLeft)\n            ) {\n                index = indexRight;\n            } else {\n                index = indexLeft;\n            }\n\n            return { label: label(stack), value: values(stack)[index] };\n        });\n\n        valuesAtX.sort((a, b) => y(a.value) - y(b.value));\n\n        const yBisector = d3.bisector(e => y(e.value)).left;\n        const yIndex = yBisector(valuesAtX, yValueCursor);\n\n        const yIndexRight = yIndex === valuesAtX.length ? yIndex - 1 : yIndex;\n        const yIndexLeft = yIndex === 0 ? yIndex : yIndex - 1;\n\n        const yValueRight = y(valuesAtX[yIndexRight].value);\n        const yValueLeft = y(valuesAtX[yIndexLeft].value);\n\n        let index;\n        if (\n            Math.abs(yValueCursor - yValueRight) <\n            Math.abs(yValueCursor - yValueLeft)\n        ) {\n            index = yIndexRight;\n        } else {\n            index = yIndexLeft;\n        }\n\n        this._tooltipData = valuesAtX[index];\n\n        const html = this.props.tooltipHtml(\n            valuesAtX[index].label,\n            valuesAtX[index].value\n        );\n\n        const xPos = xScale(valuesAtX[index].value.x);\n        const yPos = yScale(valuesAtX[index].value.y);\n\n        return [html, xPos, yPos];\n    };\n\n    onMouseEnter = evt => this.props.onMouseEnter(evt, this.props.data);\n    onMouseLeave = evt => this.props.onMouseLeave(evt);\n\n    render() {\n        const {\n            height,\n            width,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            colorScale,\n            interpolate,\n            defined,\n            stroke,\n            values,\n            label,\n            x,\n            y,\n            xAxis,\n            yAxis,\n            shape,\n            shapeColor,\n            showCustomLine,\n            lineStructureClassName,\n            customPointColor,\n            customPointShape,\n            data,\n            innerWidth,\n            innerHeight,\n            xScale,\n            yScale,\n            xIntercept,\n            yIntercept,\n            svgRoot\n        } = this.props;\n\n        const line = d3.svg\n            .line()\n            .x(e => xScale(x(e)))\n            .y(e => yScale(y(e)))\n            .interpolate(interpolate)\n            .defined(defined);\n\n        let tooltipSymbol = null;\n        let points = null;\n\n        const TooltipComponent = this.props.renderTooltip(this.getTooltipHtml);\n\n        if (!this.props.tooltipHidden) {\n            const symbol = d3.svg.symbol().type(shape);\n            const symbolColor = shapeColor\n                ? shapeColor\n                : colorScale(this._tooltipData.label);\n            const translate = this._tooltipData\n                ? `translate(${xScale(x(this._tooltipData.value))}, ${yScale(\n                      y(this._tooltipData.value)\n                  )})`\n                : '';\n\n            tooltipSymbol = this.props.tooltipHidden ? null :\n                <path\n                    className=\"dot\"\n                    d={symbol()}\n                    transform={translate}\n                    fill={symbolColor}\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                />\n            ;\n        }\n\n        if (showCustomLine) {\n            const translatePoints = function (point) {\n                return `translate(${xScale(x(point))}, ${yScale(y(point))})`;\n            };\n\n            points = data.map(d =>\n                d.values.map((p, i) =>\n                    <path\n                        key={i}\n                        className={lineStructureClassName}\n                        d={d3.svg.symbol().type(customPointShape)()}\n                        transform={translatePoints(p)}\n                        fill={customPointColor}\n                        onMouseEnter={this.onMouseEnter}\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                )\n            );\n        }\n\n        return (\n            <Fragment>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    preserveAspectRatio={preserveAspectRatio}\n                    svgRoot={svgRoot}\n                >\n                    <Axis\n                        className=\"x axis\"\n                        orientation=\"bottom\"\n                        scale={xScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        zero={yIntercept}\n                        {...xAxis}\n                    />\n                    <Axis\n                        className=\"y axis\"\n                        orientation=\"left\"\n                        scale={yScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        zero={xIntercept}\n                        {...yAxis}\n                    />\n                    <DataSet\n                        height={innerHeight}\n                        width={innerWidth}\n                        data={data}\n                        line={line}\n                        colorScale={colorScale}\n                        values={values}\n                        label={label}\n                        onMouseEnter={this.props.onMouseEnter}\n                        onMouseLeave={this.props.onMouseLeave}\n                        {...stroke}\n                    />\n                    {this.props.children}\n                    {tooltipSymbol}\n                    {points}\n                </Chart>\n                {TooltipComponent}\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withArrayify,\n    withAccessor,\n    withDefaultScales,\n    withTooltip\n)(LineChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Path from '../Path';\nimport { isFunc } from '../utils/is-func';\n\nexport default class DataSet extends Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired,\n        line: PropTypes.func.isRequired,\n        colorScale: PropTypes.func.isRequired\n    };\n\n    onMouseMove = evt => this.props.onMouseEnter(evt, this.props.data);\n    onMouseLeave = evt => this.props.onMouseLeave(evt);\n    rectStyle = { pointerEvents: 'all' };\n\n    render() {\n        const {\n            width,\n            height,\n            data,\n            line,\n            strokeWidth,\n            strokeLinecap,\n            strokeDasharray,\n            colorScale,\n            values,\n            label,\n            onMouseEnter,\n            onMouseLeave\n        } = this.props;\n\n        const sizeId = width + 'x' + height;\n\n        const lines = data.map((stack, index) =>\n            <Path\n                key={`${label(stack)}.${index}`}\n                className=\"line\"\n                d={line(values(stack))}\n                stroke={colorScale(label(stack))}\n                strokeWidth={\n                    isFunc(strokeWidth)\n                        ? strokeWidth(label(stack))\n                        : strokeWidth\n                }\n                strokeLinecap={\n                    isFunc(strokeLinecap)\n                        ? strokeLinecap(label(stack))\n                        : strokeLinecap\n                }\n                strokeDasharray={\n                    isFunc(strokeDasharray)\n                        ? strokeDasharray(label(stack))\n                        : strokeDasharray\n                }\n                data={values(stack)}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                style={{ clipPath: `url(#lineClip_${sizeId})` }}\n            />\n        );\n\n        /*\n         The <rect> below is needed in case we want to show the tooltip no matter where on the chart the mouse is.\n         Not sure if this should be used.\n         */\n        return (\n            <g>\n                <defs>\n                    <clipPath id={`lineClip_${sizeId}`}>\n                        <rect width={width} height={height} />\n                    </clipPath>\n                </defs>\n                {lines}\n                <rect\n                    width={width}\n                    height={height}\n                    fill=\"none\"\n                    stroke=\"none\"\n                    style={this.rectStyle}\n                    onMouseMove={this.onMouseMove}\n                    onMouseLeave={this.onMouseLeave}\n                />\n            </g>\n        );\n    }\n}\n","export const isFunc = val => typeof val === 'function';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport d3 from 'd3';\n\nimport DataSet from './DataSet';\nimport Chart from '../Chart';\nimport Fragment from '../Fragment';\nimport { compose } from '../utils/compose';\nimport { withAccessor } from '../hocs/withAccessor';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withTooltip } from '../hocs/withTooltip';\n\nclass PieChart extends Component {\n    static propTypes = {\n        innerRadius: PropTypes.number,\n        outerRadius: PropTypes.number,\n        labelRadius: PropTypes.number,\n        padRadius: PropTypes.string,\n        cornerRadius: PropTypes.number,\n        sort: PropTypes.any,\n        hideLabels: PropTypes.bool\n    };\n\n    static defaultProps = {\n        innerRadius: null,\n        outerRadius: null,\n        labelRadius: null,\n        padRadius: 'auto',\n        cornerRadius: 0,\n        sort: undefined,\n        hideLabels: false\n    };\n\n    getTooltipHtml = d => {\n        const html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n        return [html, 0, 0];\n    };\n\n    render() {\n        const {\n            data,\n            width,\n            height,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            colorScale,\n            padRadius,\n            cornerRadius,\n            sort,\n            x,\n            y,\n            values,\n            hideLabels,\n            innerWidth,\n            innerHeight,\n            svgRoot\n        } = this.props;\n\n        let { innerRadius, outerRadius, labelRadius } = this.props;\n\n        let pie = d3.layout.pie().value(e => y(e));\n\n        if (typeof sort !== 'undefined') {\n            pie = pie.sort(sort);\n        }\n\n        const radius = Math.min(innerWidth, innerHeight) / 2;\n\n        if (!innerRadius) {\n            innerRadius = radius * 0.8;\n        }\n\n        if (!outerRadius) {\n            outerRadius = radius * 0.4;\n        }\n\n        if (!labelRadius) {\n            labelRadius = radius * 0.9;\n        }\n\n        const arc = d3.svg\n            .arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .padRadius(padRadius)\n            .cornerRadius(cornerRadius);\n\n        const outerArc = d3.svg\n            .arc()\n            .innerRadius(labelRadius)\n            .outerRadius(labelRadius);\n\n        const pieData = pie(values(data));\n\n        const translation = `translate(${innerWidth / 2}, ${innerHeight / 2})`;\n\n        return (\n            <Fragment>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    preserveAspectRatio={preserveAspectRatio}\n                    svgRoot={svgRoot}\n                >\n                    <g transform={translation}>\n                        <DataSet\n                            width={innerWidth}\n                            height={innerHeight}\n                            colorScale={colorScale}\n                            pie={pieData}\n                            arc={arc}\n                            outerArc={outerArc}\n                            radius={radius}\n                            x={x}\n                            y={y}\n                            onMouseEnter={this.props.onMouseEnter}\n                            onMouseLeave={this.props.onMouseLeave}\n                            hideLabels={hideLabels}\n                        />\n                    </g>\n                    {this.props.children}\n                </Chart>\n                {this.props.renderTooltip(this.getTooltipHtml)}\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withAccessor,\n    withTooltip\n)(PieChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Wedge from './Wedge';\n\nexport default class DataSet extends Component {\n    static propTypes = {\n        pie: PropTypes.array.isRequired,\n        arc: PropTypes.func.isRequired,\n        outerArc: PropTypes.func.isRequired,\n        colorScale: PropTypes.func.isRequired,\n        radius: PropTypes.number.isRequired,\n        strokeWidth: PropTypes.number,\n        stroke: PropTypes.string,\n        fill: PropTypes.string,\n        opacity: PropTypes.number,\n        x: PropTypes.func.isRequired,\n        hideLabels: PropTypes.bool\n    };\n\n    static defaultProps = {\n        strokeWidth: 2,\n        stroke: '#000',\n        fill: 'none',\n        opacity: 0.3,\n        hideLabels: false\n    };\n\n    renderLabel(wedge) {\n        const {\n            arc,\n            outerArc,\n            radius,\n            strokeWidth,\n            stroke,\n            fill,\n            opacity,\n            x\n        } = this.props;\n\n        const labelPos = outerArc.centroid(wedge);\n        labelPos[0] = radius * (DataSet.midAngle(wedge) < Math.PI ? 1 : -1);\n\n        const linePos = outerArc.centroid(wedge);\n        linePos[0] =\n            radius * 0.95 * (DataSet.midAngle(wedge) < Math.PI ? 1 : -1);\n\n        const textAnchor = DataSet.midAngle(wedge) < Math.PI ? 'start' : 'end';\n\n        return (\n            <g>\n                <polyline\n                    opacity={opacity}\n                    strokeWidth={strokeWidth}\n                    stroke={stroke}\n                    fill={fill}\n                    points={[\n                        arc.centroid(wedge),\n                        outerArc.centroid(wedge),\n                        linePos\n                    ]}\n                />\n                <text\n                    dy=\".35em\"\n                    x={labelPos[0]}\n                    y={labelPos[1]}\n                    textAnchor={textAnchor}\n                >\n                    {x(wedge.data)}\n                </text>\n            </g>\n        );\n    }\n\n    render() {\n        const {\n            pie,\n            arc,\n            colorScale,\n            x,\n            y,\n            onMouseEnter,\n            onMouseLeave,\n            hideLabels\n        } = this.props;\n\n        const wedges = pie.map((e, index) => {\n            const labelFits = e.endAngle - e.startAngle >= 10 * Math.PI / 180;\n\n            return (\n                <g key={`${x(e.data)}.${y(e.data)}.${index}`} className=\"arc\">\n                    <Wedge\n                        data={e.data}\n                        fill={colorScale(x(e.data))}\n                        d={arc(e)}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                    />\n                    {!hideLabels &&\n                        !!e.value &&\n                        labelFits &&\n                        this.renderLabel(e)}\n                </g>\n            );\n        });\n\n        return <g>{wedges}</g>;\n    }\n\n    static midAngle({ startAngle, endAngle }) {\n        return startAngle + (endAngle - startAngle) / 2;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Wedge = ({ fill, d, data, onMouseEnter, onMouseLeave }) =>\n    <path\n        fill={fill}\n        d={d}\n        onMouseMove={evt => onMouseEnter(evt, data)}\n        onMouseLeave={evt => onMouseLeave(evt)}\n    />\n;\n\nWedge.propTypes = {\n    d: PropTypes.string.isRequired,\n    fill: PropTypes.string.isRequired\n};\n\nexport default Wedge;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport d3 from 'd3';\n\nimport DataSet from './DataSet';\nimport Axis from '../Axis';\nimport Chart from '../Chart';\nimport Fragment from '../Fragment';\nimport { compose } from '../utils/compose';\nimport { withAccessor } from '../hocs/withAccessor';\nimport { withArrayify } from '../hocs/withArrayify';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withDefaultScales } from '../hocs/withDefaultScales';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withTooltip } from '../hocs/withTooltip';\n\nclass ScatterPlot extends Component {\n    static propTypes = {\n        rScale: PropTypes.func,\n        shape: PropTypes.string\n    };\n\n    static defaultProps = {\n        rScale: null,\n        shape: 'circle'\n    };\n\n    getTooltipHtml = d => {\n        const html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n        const xPos = this.props.xScale(this.props.x(d));\n        const yPos = this.props.yScale(this.props.y(d));\n\n        return [html, xPos, yPos];\n    };\n\n    render() {\n        const {\n            height,\n            width,\n            margin,\n            viewBox,\n            preserveAspectRatio,\n            colorScale,\n            rScale,\n            shape,\n            label,\n            values,\n            x,\n            y,\n            xAxis,\n            yAxis,\n            data,\n            innerWidth,\n            innerHeight,\n            xScale,\n            yScale,\n            xIntercept,\n            yIntercept,\n            svgRoot\n        } = this.props;\n\n        let symbol = d3.svg.symbol().type(shape);\n\n        if (rScale) {\n            symbol = symbol.size(rScale);\n        }\n\n        return (\n            <Fragment>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    preserveAspectRatio={preserveAspectRatio}\n                    svgRoot={svgRoot}\n                >\n                    <Axis\n                        className=\"x axis\"\n                        orientation=\"bottom\"\n                        scale={xScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        zero={yIntercept}\n                        {...xAxis}\n                    />\n                    <Axis\n                        className=\"y axis\"\n                        orientation=\"left\"\n                        scale={yScale}\n                        height={innerHeight}\n                        width={innerWidth}\n                        zero={xIntercept}\n                        {...yAxis}\n                    />\n                    <DataSet\n                        data={data}\n                        xScale={xScale}\n                        yScale={yScale}\n                        colorScale={colorScale}\n                        symbol={symbol}\n                        label={label}\n                        values={values}\n                        x={x}\n                        y={y}\n                        onMouseEnter={this.props.onMouseEnter}\n                        onMouseLeave={this.props.onMouseLeave}\n                    />\n                    {this.props.children}\n                </Chart>\n                {this.props.renderTooltip(this.getTooltipHtml)}\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withArrayify,\n    withAccessor,\n    withDefaultScales,\n    withTooltip\n)(ScatterPlot);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSet = ({\n    data,\n    symbol,\n    xScale,\n    yScale,\n    colorScale,\n    label,\n    values,\n    x,\n    y,\n    onMouseEnter,\n    onMouseLeave\n}) => {\n    const circles = data.map(stack =>\n        values(stack).map((e, index) => {\n            const translate = `translate(${xScale(x(e))}, ${yScale(y(e))})`;\n            return (\n                <path\n                    key={`${label(stack)}.${index}`}\n                    className=\"dot\"\n                    d={symbol()}\n                    transform={translate}\n                    fill={colorScale(label(stack))}\n                    onMouseOver={evt => onMouseEnter(evt, e)}\n                    onMouseLeave={evt => onMouseLeave(evt)}\n                />\n            );\n        })\n    );\n\n    return <g>{circles}</g>;\n};\n\nDataSet.propTypes = {\n    data: PropTypes.array.isRequired,\n    symbol: PropTypes.func.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    colorScale: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func\n};\n\nexport default DataSet;\n","import React, { Component } from 'react';\n\nimport DataSet from './DataSet';\nimport Chart from '../Chart';\nimport { compose } from '../utils/compose';\nimport { withArrayify } from '../hocs/withArrayify';\nimport { withDefaultProps } from '../hocs/withDefaultProps';\nimport { withDefaultScales } from '../hocs/withDefaultScales';\nimport { withHeightWidth } from '../hocs/withHeightWidth';\nimport { withStackAccessor } from '../hocs/withStackAccessor';\nimport { withStackData } from '../hocs/withStackData';\nimport { withTooltip } from '../hocs/withTooltip';\n\n// receive array and return a subsampled array of size n\n//\n// a= the array;\n// n= number of sample you want output\nconst subSample = function (a, n) {\n    const returnArray = [];\n    const m = a.length;\n    const samplingRatio = m / n;\n\n    //just round down for now in case of comma separated\n    for (let i = 0; i < m; ) {\n        returnArray.push(a[Math.floor(i)]);\n        i += samplingRatio;\n    }\n    return returnArray;\n};\n\nclass Waveform extends Component {\n    /*_tooltipHtml(d) {\n        const [xScale, yScale] = [this._xScale, this._yScale];\n\n        const html = this.props.tooltipHtml(\n            this.props.x(d),\n            this.props.y0(d),\n            this.props.y(d)\n        );\n\n        const midPoint = xScale.rangeBand() / 2;\n        const xPos = midPoint + xScale(this.props.x(d));\n\n        const topStack = this._data[this._data.length - 1].values;\n        let topElement = null;\n\n        // TODO: this might not scale if dataset is huge.\n        // consider pre-computing yPos for each X\n        for (let i = 0; i < topStack.length; i++) {\n            if (this.props.x(topStack[i]) === this.props.x(d)) {\n                topElement = topStack[i];\n                break;\n            }\n        }\n        const yPos = yScale(\n            this.props.y0(topElement) + this.props.y(topElement)\n        );\n\n        return [html, xPos, yPos];\n    }*/\n\n    render() {\n        const {\n            height,\n            width,\n            margin,\n            colorScale,\n            values,\n            label,\n            y,\n            y0,\n            x,\n            data,\n            innerWidth,\n            xScale,\n            yScale\n        } = this.props;\n\n        const preserveAspectRatio = 'none';\n        const viewBox = `0 0 ${width} ${height}`;\n\n        // there are two options, if the samples are less than the space available\n        // we'll stretch the width of bar and inbetween spaces.\n        // Otherwise we just subSample the dataArray.\n        let barWidth;\n        if (data[0].values.length > innerWidth / 2) {\n            data[0].values = subSample(data[0].values, innerWidth / 2);\n            barWidth = 1;\n        } else {\n            barWidth = innerWidth / 2 / data[0].values.length;\n        }\n\n        return (\n            <div>\n                <Chart\n                    height={height}\n                    width={width}\n                    margin={margin}\n                    viewBox={viewBox}\n                    preserveAspectRatio={preserveAspectRatio}\n                >\n                    <DataSet\n                        data={data}\n                        xScale={xScale}\n                        yScale={yScale}\n                        colorScale={colorScale}\n                        label={label}\n                        values={values}\n                        x={x}\n                        y={y}\n                        y0={y0}\n                        x0={barWidth}\n                        onMouseEnter={this.props.onMouseEnter}\n                        onMouseLeave={this.props.onMouseLeave}\n                    >\n                        {this.props.children}\n                    </DataSet>\n                </Chart>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    withDefaultProps,\n    withHeightWidth,\n    withArrayify,\n    withStackAccessor,\n    withStackData,\n    withDefaultScales,\n    withTooltip\n)(Waveform);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Bar from '../Bar';\n\nexport default class DataSet extends Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired,\n        xScale: PropTypes.func.isRequired,\n        yScale: PropTypes.func.isRequired,\n        colorScale: PropTypes.func.isRequired,\n        values: PropTypes.func.isRequired,\n        label: PropTypes.func.isRequired,\n        x: PropTypes.func.isRequired,\n        y: PropTypes.func.isRequired,\n        y0: PropTypes.func.isRequired\n    };\n\n    render() {\n        const {\n            data,\n            yScale,\n            colorScale,\n            values,\n            label,\n            y,\n            x0,\n            onMouseEnter,\n            onMouseLeave\n        } = this.props;\n\n        const height = yScale(yScale.domain()[0]);\n        const bars = data.map(stack =>\n            values(stack).map((e, index) => {\n                // maps the range [0,1] to the range [0, yDomain]\n                const yValue = height * y(e);\n                // center vertically to have upper and lower part of the waveform\n                const vy = height / 2 - yValue / 2;\n                // position x(e) * width * 2 because we want equal sapce.\n                const vx = 2 * x0 * index;\n\n                return (\n                    <Bar\n                        key={`${label(stack)}.${index}`}\n                        width={x0}\n                        height={yValue}\n                        x={vx}\n                        y={vy}\n                        fill={colorScale(Math.floor(vx))}\n                        data={e}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                    />\n                );\n            })\n        );\n\n        return <g>{bars}</g>;\n    }\n}\n"],"sourceRoot":""}